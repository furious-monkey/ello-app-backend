// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.tl.proto

package mtproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// /////////////////////////////////////////////////////////////////////////////
// SessionClientEvent <--
//  + TL_sessionClientCreated
//  + TL_sessionClientClosed
//
type SessionClientEvent_Data struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	ClientConnId         int64    `protobuf:"varint,2,opt,name=client_conn_id,json=clientConnId,proto3" json:"client_conn_id,omitempty"`
	ConnType             int32    `protobuf:"varint,3,opt,name=conn_type,json=connType,proto3" json:"conn_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionClientEvent_Data) Reset()         { *m = SessionClientEvent_Data{} }
func (m *SessionClientEvent_Data) String() string { return proto.CompactTextString(m) }
func (*SessionClientEvent_Data) ProtoMessage()    {}
func (*SessionClientEvent_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{0}
}
func (m *SessionClientEvent_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionClientEvent_Data.Unmarshal(m, b)
}
func (m *SessionClientEvent_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionClientEvent_Data.Marshal(b, m, deterministic)
}
func (dst *SessionClientEvent_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionClientEvent_Data.Merge(dst, src)
}
func (m *SessionClientEvent_Data) XXX_Size() int {
	return xxx_messageInfo_SessionClientEvent_Data.Size(m)
}
func (m *SessionClientEvent_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionClientEvent_Data.DiscardUnknown(m)
}

var xxx_messageInfo_SessionClientEvent_Data proto.InternalMessageInfo

func (m *SessionClientEvent_Data) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *SessionClientEvent_Data) GetClientConnId() int64 {
	if m != nil {
		return m.ClientConnId
	}
	return 0
}

func (m *SessionClientEvent_Data) GetConnType() int32 {
	if m != nil {
		return m.ConnType
	}
	return 0
}

type SessionClientEvent struct {
	Constructor          TLConstructor            `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Data2                *SessionClientEvent_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SessionClientEvent) Reset()         { *m = SessionClientEvent{} }
func (m *SessionClientEvent) String() string { return proto.CompactTextString(m) }
func (*SessionClientEvent) ProtoMessage()    {}
func (*SessionClientEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{1}
}
func (m *SessionClientEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionClientEvent.Unmarshal(m, b)
}
func (m *SessionClientEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionClientEvent.Marshal(b, m, deterministic)
}
func (dst *SessionClientEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionClientEvent.Merge(dst, src)
}
func (m *SessionClientEvent) XXX_Size() int {
	return xxx_messageInfo_SessionClientEvent.Size(m)
}
func (m *SessionClientEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionClientEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SessionClientEvent proto.InternalMessageInfo

func (m *SessionClientEvent) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (m *SessionClientEvent) GetData2() *SessionClientEvent_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// sessionClientCreated auth_key_id:long client_conn_id:long conn_type:int = SessionClientEvent;
type TLSessionClientCreated struct {
	Data2                *SessionClientEvent_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLSessionClientCreated) Reset()         { *m = TLSessionClientCreated{} }
func (m *TLSessionClientCreated) String() string { return proto.CompactTextString(m) }
func (*TLSessionClientCreated) ProtoMessage()    {}
func (*TLSessionClientCreated) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{2}
}
func (m *TLSessionClientCreated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionClientCreated.Unmarshal(m, b)
}
func (m *TLSessionClientCreated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionClientCreated.Marshal(b, m, deterministic)
}
func (dst *TLSessionClientCreated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionClientCreated.Merge(dst, src)
}
func (m *TLSessionClientCreated) XXX_Size() int {
	return xxx_messageInfo_TLSessionClientCreated.Size(m)
}
func (m *TLSessionClientCreated) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionClientCreated.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionClientCreated proto.InternalMessageInfo

func (m *TLSessionClientCreated) GetData2() *SessionClientEvent_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// sessionClientClosed auth_key_id:long client_conn_id:long conn_type:int = SessionClientEvent;
type TLSessionClientClosed struct {
	Data2                *SessionClientEvent_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLSessionClientClosed) Reset()         { *m = TLSessionClientClosed{} }
func (m *TLSessionClientClosed) String() string { return proto.CompactTextString(m) }
func (*TLSessionClientClosed) ProtoMessage()    {}
func (*TLSessionClientClosed) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{3}
}
func (m *TLSessionClientClosed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionClientClosed.Unmarshal(m, b)
}
func (m *TLSessionClientClosed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionClientClosed.Marshal(b, m, deterministic)
}
func (dst *TLSessionClientClosed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionClientClosed.Merge(dst, src)
}
func (m *TLSessionClientClosed) XXX_Size() int {
	return xxx_messageInfo_TLSessionClientClosed.Size(m)
}
func (m *TLSessionClientClosed) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionClientClosed.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionClientClosed proto.InternalMessageInfo

func (m *TLSessionClientClosed) GetData2() *SessionClientEvent_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// RawMessageData <--
//  + TL_handshakeData
//  + TL_sessionMessageData
//
type RawMessageData_Data struct {
	State                int32             `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	ResState             int32             `protobuf:"varint,2,opt,name=res_state,json=resState,proto3" json:"res_state,omitempty"`
	ClientConnId         int64             `protobuf:"varint,3,opt,name=client_conn_id,json=clientConnId,proto3" json:"client_conn_id,omitempty"`
	Ctx                  *HandshakeContext `protobuf:"bytes,4,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AuthKeyId            int64             `protobuf:"varint,5,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	QuickAck             int32             `protobuf:"varint,6,opt,name=quick_ack,json=quickAck,proto3" json:"quick_ack,omitempty"`
	ConnType             int32             `protobuf:"varint,7,opt,name=conn_type,json=connType,proto3" json:"conn_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RawMessageData_Data) Reset()         { *m = RawMessageData_Data{} }
func (m *RawMessageData_Data) String() string { return proto.CompactTextString(m) }
func (*RawMessageData_Data) ProtoMessage()    {}
func (*RawMessageData_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{4}
}
func (m *RawMessageData_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawMessageData_Data.Unmarshal(m, b)
}
func (m *RawMessageData_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawMessageData_Data.Marshal(b, m, deterministic)
}
func (dst *RawMessageData_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawMessageData_Data.Merge(dst, src)
}
func (m *RawMessageData_Data) XXX_Size() int {
	return xxx_messageInfo_RawMessageData_Data.Size(m)
}
func (m *RawMessageData_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RawMessageData_Data.DiscardUnknown(m)
}

var xxx_messageInfo_RawMessageData_Data proto.InternalMessageInfo

func (m *RawMessageData_Data) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *RawMessageData_Data) GetResState() int32 {
	if m != nil {
		return m.ResState
	}
	return 0
}

func (m *RawMessageData_Data) GetClientConnId() int64 {
	if m != nil {
		return m.ClientConnId
	}
	return 0
}

func (m *RawMessageData_Data) GetCtx() *HandshakeContext {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *RawMessageData_Data) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *RawMessageData_Data) GetQuickAck() int32 {
	if m != nil {
		return m.QuickAck
	}
	return 0
}

func (m *RawMessageData_Data) GetConnType() int32 {
	if m != nil {
		return m.ConnType
	}
	return 0
}

type RawMessageData struct {
	Constructor          TLConstructor        `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Data2                *RawMessageData_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RawMessageData) Reset()         { *m = RawMessageData{} }
func (m *RawMessageData) String() string { return proto.CompactTextString(m) }
func (*RawMessageData) ProtoMessage()    {}
func (*RawMessageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{5}
}
func (m *RawMessageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawMessageData.Unmarshal(m, b)
}
func (m *RawMessageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawMessageData.Marshal(b, m, deterministic)
}
func (dst *RawMessageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawMessageData.Merge(dst, src)
}
func (m *RawMessageData) XXX_Size() int {
	return xxx_messageInfo_RawMessageData.Size(m)
}
func (m *RawMessageData) XXX_DiscardUnknown() {
	xxx_messageInfo_RawMessageData.DiscardUnknown(m)
}

var xxx_messageInfo_RawMessageData proto.InternalMessageInfo

func (m *RawMessageData) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (m *RawMessageData) GetData2() *RawMessageData_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// handshakeData state:int res_state:int client_conn_id:long ctx:HandshakeContext = RawMessageData;
type TLHandshakeData struct {
	Data2                *RawMessageData_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TLHandshakeData) Reset()         { *m = TLHandshakeData{} }
func (m *TLHandshakeData) String() string { return proto.CompactTextString(m) }
func (*TLHandshakeData) ProtoMessage()    {}
func (*TLHandshakeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{6}
}
func (m *TLHandshakeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLHandshakeData.Unmarshal(m, b)
}
func (m *TLHandshakeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLHandshakeData.Marshal(b, m, deterministic)
}
func (dst *TLHandshakeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHandshakeData.Merge(dst, src)
}
func (m *TLHandshakeData) XXX_Size() int {
	return xxx_messageInfo_TLHandshakeData.Size(m)
}
func (m *TLHandshakeData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHandshakeData.DiscardUnknown(m)
}

var xxx_messageInfo_TLHandshakeData proto.InternalMessageInfo

func (m *TLHandshakeData) GetData2() *RawMessageData_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// sessionMessageData auth_key_id:long quick_ack:int client_conn_id:long conn_type:int = RawMessageData;
type TLSessionMessageData struct {
	Data2                *RawMessageData_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TLSessionMessageData) Reset()         { *m = TLSessionMessageData{} }
func (m *TLSessionMessageData) String() string { return proto.CompactTextString(m) }
func (*TLSessionMessageData) ProtoMessage()    {}
func (*TLSessionMessageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{7}
}
func (m *TLSessionMessageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionMessageData.Unmarshal(m, b)
}
func (m *TLSessionMessageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionMessageData.Marshal(b, m, deterministic)
}
func (dst *TLSessionMessageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionMessageData.Merge(dst, src)
}
func (m *TLSessionMessageData) XXX_Size() int {
	return xxx_messageInfo_TLSessionMessageData.Size(m)
}
func (m *TLSessionMessageData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionMessageData.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionMessageData proto.InternalMessageInfo

func (m *TLSessionMessageData) GetData2() *RawMessageData_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// Int64 <--
//  + TL_long
//
type Int64_Data struct {
	V                    int64    `protobuf:"varint,1,opt,name=v,proto3" json:"v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Int64_Data) Reset()         { *m = Int64_Data{} }
func (m *Int64_Data) String() string { return proto.CompactTextString(m) }
func (*Int64_Data) ProtoMessage()    {}
func (*Int64_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{8}
}
func (m *Int64_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Int64_Data.Unmarshal(m, b)
}
func (m *Int64_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Int64_Data.Marshal(b, m, deterministic)
}
func (dst *Int64_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Int64_Data.Merge(dst, src)
}
func (m *Int64_Data) XXX_Size() int {
	return xxx_messageInfo_Int64_Data.Size(m)
}
func (m *Int64_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Int64_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Int64_Data proto.InternalMessageInfo

func (m *Int64_Data) GetV() int64 {
	if m != nil {
		return m.V
	}
	return 0
}

type Int64 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Data2                *Int64_Data   `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Int64) Reset()         { *m = Int64{} }
func (m *Int64) String() string { return proto.CompactTextString(m) }
func (*Int64) ProtoMessage()    {}
func (*Int64) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{9}
}
func (m *Int64) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Int64.Unmarshal(m, b)
}
func (m *Int64) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Int64.Marshal(b, m, deterministic)
}
func (dst *Int64) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Int64.Merge(dst, src)
}
func (m *Int64) XXX_Size() int {
	return xxx_messageInfo_Int64.Size(m)
}
func (m *Int64) XXX_DiscardUnknown() {
	xxx_messageInfo_Int64.DiscardUnknown(m)
}

var xxx_messageInfo_Int64 proto.InternalMessageInfo

func (m *Int64) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (m *Int64) GetData2() *Int64_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// long v:long = Int64;
type TLLong struct {
	Data2                *Int64_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TLLong) Reset()         { *m = TLLong{} }
func (m *TLLong) String() string { return proto.CompactTextString(m) }
func (*TLLong) ProtoMessage()    {}
func (*TLLong) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{10}
}
func (m *TLLong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLLong.Unmarshal(m, b)
}
func (m *TLLong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLLong.Marshal(b, m, deterministic)
}
func (dst *TLLong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLong.Merge(dst, src)
}
func (m *TLLong) XXX_Size() int {
	return xxx_messageInfo_TLLong.Size(m)
}
func (m *TLLong) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLong.DiscardUnknown(m)
}

var xxx_messageInfo_TLLong proto.InternalMessageInfo

func (m *TLLong) GetData2() *Int64_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// String <--
//  + TL_string
//
type String_Data struct {
	V                    string   `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *String_Data) Reset()         { *m = String_Data{} }
func (m *String_Data) String() string { return proto.CompactTextString(m) }
func (*String_Data) ProtoMessage()    {}
func (*String_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{11}
}
func (m *String_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_String_Data.Unmarshal(m, b)
}
func (m *String_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_String_Data.Marshal(b, m, deterministic)
}
func (dst *String_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_String_Data.Merge(dst, src)
}
func (m *String_Data) XXX_Size() int {
	return xxx_messageInfo_String_Data.Size(m)
}
func (m *String_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_String_Data.DiscardUnknown(m)
}

var xxx_messageInfo_String_Data proto.InternalMessageInfo

func (m *String_Data) GetV() string {
	if m != nil {
		return m.V
	}
	return ""
}

type String struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Data2                *String_Data  `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *String) Reset()         { *m = String{} }
func (m *String) String() string { return proto.CompactTextString(m) }
func (*String) ProtoMessage()    {}
func (*String) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{12}
}
func (m *String) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_String.Unmarshal(m, b)
}
func (m *String) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_String.Marshal(b, m, deterministic)
}
func (dst *String) XXX_Merge(src proto.Message) {
	xxx_messageInfo_String.Merge(dst, src)
}
func (m *String) XXX_Size() int {
	return xxx_messageInfo_String.Size(m)
}
func (m *String) XXX_DiscardUnknown() {
	xxx_messageInfo_String.DiscardUnknown(m)
}

var xxx_messageInfo_String proto.InternalMessageInfo

func (m *String) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (m *String) GetData2() *String_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// string v:string = String;
type TLString struct {
	Data2                *String_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TLString) Reset()         { *m = TLString{} }
func (m *TLString) String() string { return proto.CompactTextString(m) }
func (*TLString) ProtoMessage()    {}
func (*TLString) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{13}
}
func (m *TLString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLString.Unmarshal(m, b)
}
func (m *TLString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLString.Marshal(b, m, deterministic)
}
func (dst *TLString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLString.Merge(dst, src)
}
func (m *TLString) XXX_Size() int {
	return xxx_messageInfo_TLString.Size(m)
}
func (m *TLString) XXX_DiscardUnknown() {
	xxx_messageInfo_TLString.DiscardUnknown(m)
}

var xxx_messageInfo_TLString proto.InternalMessageInfo

func (m *TLString) GetData2() *String_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// RSAPublicKey <--
//  + TL_rsa_public_key
//
type RSAPublicKey_Data struct {
	N                    string   `protobuf:"bytes,1,opt,name=n,proto3" json:"n,omitempty"`
	E                    string   `protobuf:"bytes,2,opt,name=e,proto3" json:"e,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RSAPublicKey_Data) Reset()         { *m = RSAPublicKey_Data{} }
func (m *RSAPublicKey_Data) String() string { return proto.CompactTextString(m) }
func (*RSAPublicKey_Data) ProtoMessage()    {}
func (*RSAPublicKey_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{14}
}
func (m *RSAPublicKey_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RSAPublicKey_Data.Unmarshal(m, b)
}
func (m *RSAPublicKey_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RSAPublicKey_Data.Marshal(b, m, deterministic)
}
func (dst *RSAPublicKey_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RSAPublicKey_Data.Merge(dst, src)
}
func (m *RSAPublicKey_Data) XXX_Size() int {
	return xxx_messageInfo_RSAPublicKey_Data.Size(m)
}
func (m *RSAPublicKey_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RSAPublicKey_Data.DiscardUnknown(m)
}

var xxx_messageInfo_RSAPublicKey_Data proto.InternalMessageInfo

func (m *RSAPublicKey_Data) GetN() string {
	if m != nil {
		return m.N
	}
	return ""
}

func (m *RSAPublicKey_Data) GetE() string {
	if m != nil {
		return m.E
	}
	return ""
}

type RSAPublicKey struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Data2                *RSAPublicKey_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RSAPublicKey) Reset()         { *m = RSAPublicKey{} }
func (m *RSAPublicKey) String() string { return proto.CompactTextString(m) }
func (*RSAPublicKey) ProtoMessage()    {}
func (*RSAPublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{15}
}
func (m *RSAPublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RSAPublicKey.Unmarshal(m, b)
}
func (m *RSAPublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RSAPublicKey.Marshal(b, m, deterministic)
}
func (dst *RSAPublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RSAPublicKey.Merge(dst, src)
}
func (m *RSAPublicKey) XXX_Size() int {
	return xxx_messageInfo_RSAPublicKey.Size(m)
}
func (m *RSAPublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_RSAPublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_RSAPublicKey proto.InternalMessageInfo

func (m *RSAPublicKey) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (m *RSAPublicKey) GetData2() *RSAPublicKey_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// rsa_public_key n:string e:string = RSAPublicKey;
type TLRsaPublicKey struct {
	Data2                *RSAPublicKey_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLRsaPublicKey) Reset()         { *m = TLRsaPublicKey{} }
func (m *TLRsaPublicKey) String() string { return proto.CompactTextString(m) }
func (*TLRsaPublicKey) ProtoMessage()    {}
func (*TLRsaPublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{16}
}
func (m *TLRsaPublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLRsaPublicKey.Unmarshal(m, b)
}
func (m *TLRsaPublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLRsaPublicKey.Marshal(b, m, deterministic)
}
func (dst *TLRsaPublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLRsaPublicKey.Merge(dst, src)
}
func (m *TLRsaPublicKey) XXX_Size() int {
	return xxx_messageInfo_TLRsaPublicKey.Size(m)
}
func (m *TLRsaPublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_TLRsaPublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_TLRsaPublicKey proto.InternalMessageInfo

func (m *TLRsaPublicKey) GetData2() *RSAPublicKey_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// HandshakeContext <--
//  + TL_handshakeContext
//
type HandshakeContext_Data struct {
	Nonce                []byte   `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ServerNonce          []byte   `protobuf:"bytes,2,opt,name=server_nonce,json=serverNonce,proto3" json:"server_nonce,omitempty"`
	NewNonce             []byte   `protobuf:"bytes,3,opt,name=new_nonce,json=newNonce,proto3" json:"new_nonce,omitempty"`
	A                    []byte   `protobuf:"bytes,4,opt,name=a,proto3" json:"a,omitempty"`
	P                    []byte   `protobuf:"bytes,5,opt,name=p,proto3" json:"p,omitempty"`
	AuthKeyId            int64    `protobuf:"varint,6,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	AuthKey              []byte   `protobuf:"bytes,7,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandshakeContext_Data) Reset()         { *m = HandshakeContext_Data{} }
func (m *HandshakeContext_Data) String() string { return proto.CompactTextString(m) }
func (*HandshakeContext_Data) ProtoMessage()    {}
func (*HandshakeContext_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{17}
}
func (m *HandshakeContext_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandshakeContext_Data.Unmarshal(m, b)
}
func (m *HandshakeContext_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandshakeContext_Data.Marshal(b, m, deterministic)
}
func (dst *HandshakeContext_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandshakeContext_Data.Merge(dst, src)
}
func (m *HandshakeContext_Data) XXX_Size() int {
	return xxx_messageInfo_HandshakeContext_Data.Size(m)
}
func (m *HandshakeContext_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_HandshakeContext_Data.DiscardUnknown(m)
}

var xxx_messageInfo_HandshakeContext_Data proto.InternalMessageInfo

func (m *HandshakeContext_Data) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *HandshakeContext_Data) GetServerNonce() []byte {
	if m != nil {
		return m.ServerNonce
	}
	return nil
}

func (m *HandshakeContext_Data) GetNewNonce() []byte {
	if m != nil {
		return m.NewNonce
	}
	return nil
}

func (m *HandshakeContext_Data) GetA() []byte {
	if m != nil {
		return m.A
	}
	return nil
}

func (m *HandshakeContext_Data) GetP() []byte {
	if m != nil {
		return m.P
	}
	return nil
}

func (m *HandshakeContext_Data) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *HandshakeContext_Data) GetAuthKey() []byte {
	if m != nil {
		return m.AuthKey
	}
	return nil
}

type HandshakeContext struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Data2                *HandshakeContext_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *HandshakeContext) Reset()         { *m = HandshakeContext{} }
func (m *HandshakeContext) String() string { return proto.CompactTextString(m) }
func (*HandshakeContext) ProtoMessage()    {}
func (*HandshakeContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{18}
}
func (m *HandshakeContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandshakeContext.Unmarshal(m, b)
}
func (m *HandshakeContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandshakeContext.Marshal(b, m, deterministic)
}
func (dst *HandshakeContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandshakeContext.Merge(dst, src)
}
func (m *HandshakeContext) XXX_Size() int {
	return xxx_messageInfo_HandshakeContext.Size(m)
}
func (m *HandshakeContext) XXX_DiscardUnknown() {
	xxx_messageInfo_HandshakeContext.DiscardUnknown(m)
}

var xxx_messageInfo_HandshakeContext proto.InternalMessageInfo

func (m *HandshakeContext) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (m *HandshakeContext) GetData2() *HandshakeContext_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// handshakeContext nonce:int128 server_nonce:int128 new_nonce:int256 a:bytes p:bytes auth_key_id:long auth_key:bytes = HandshakeContext;
type TLHandshakeContext struct {
	Data2                *HandshakeContext_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLHandshakeContext) Reset()         { *m = TLHandshakeContext{} }
func (m *TLHandshakeContext) String() string { return proto.CompactTextString(m) }
func (*TLHandshakeContext) ProtoMessage()    {}
func (*TLHandshakeContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{19}
}
func (m *TLHandshakeContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLHandshakeContext.Unmarshal(m, b)
}
func (m *TLHandshakeContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLHandshakeContext.Marshal(b, m, deterministic)
}
func (dst *TLHandshakeContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHandshakeContext.Merge(dst, src)
}
func (m *TLHandshakeContext) XXX_Size() int {
	return xxx_messageInfo_TLHandshakeContext.Size(m)
}
func (m *TLHandshakeContext) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHandshakeContext.DiscardUnknown(m)
}

var xxx_messageInfo_TLHandshakeContext proto.InternalMessageInfo

func (m *TLHandshakeContext) GetData2() *HandshakeContext_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// Int32 <--
//  + TL_int32
//
type Int32_Data struct {
	V                    int32    `protobuf:"varint,1,opt,name=v,proto3" json:"v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Int32_Data) Reset()         { *m = Int32_Data{} }
func (m *Int32_Data) String() string { return proto.CompactTextString(m) }
func (*Int32_Data) ProtoMessage()    {}
func (*Int32_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{20}
}
func (m *Int32_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Int32_Data.Unmarshal(m, b)
}
func (m *Int32_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Int32_Data.Marshal(b, m, deterministic)
}
func (dst *Int32_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Int32_Data.Merge(dst, src)
}
func (m *Int32_Data) XXX_Size() int {
	return xxx_messageInfo_Int32_Data.Size(m)
}
func (m *Int32_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Int32_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Int32_Data proto.InternalMessageInfo

func (m *Int32_Data) GetV() int32 {
	if m != nil {
		return m.V
	}
	return 0
}

type Int32 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Data2                *Int32_Data   `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Int32) Reset()         { *m = Int32{} }
func (m *Int32) String() string { return proto.CompactTextString(m) }
func (*Int32) ProtoMessage()    {}
func (*Int32) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{21}
}
func (m *Int32) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Int32.Unmarshal(m, b)
}
func (m *Int32) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Int32.Marshal(b, m, deterministic)
}
func (dst *Int32) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Int32.Merge(dst, src)
}
func (m *Int32) XXX_Size() int {
	return xxx_messageInfo_Int32.Size(m)
}
func (m *Int32) XXX_DiscardUnknown() {
	xxx_messageInfo_Int32.DiscardUnknown(m)
}

var xxx_messageInfo_Int32 proto.InternalMessageInfo

func (m *Int32) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (m *Int32) GetData2() *Int32_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// int32 v:int = Int32;
type TLInt32 struct {
	Data2                *Int32_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TLInt32) Reset()         { *m = TLInt32{} }
func (m *TLInt32) String() string { return proto.CompactTextString(m) }
func (*TLInt32) ProtoMessage()    {}
func (*TLInt32) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{22}
}
func (m *TLInt32) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLInt32.Unmarshal(m, b)
}
func (m *TLInt32) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLInt32.Marshal(b, m, deterministic)
}
func (dst *TLInt32) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInt32.Merge(dst, src)
}
func (m *TLInt32) XXX_Size() int {
	return xxx_messageInfo_TLInt32.Size(m)
}
func (m *TLInt32) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInt32.DiscardUnknown(m)
}

var xxx_messageInfo_TLInt32 proto.InternalMessageInfo

func (m *TLInt32) GetData2() *Int32_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// AuthKeyInfo <--
//  + TL_authKeyInfo
//
type AuthKeyInfo_Data struct {
	AuthKeyId            int64       `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	AuthKey              []byte      `protobuf:"bytes,2,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
	FutureSalt           *FutureSalt `protobuf:"bytes,3,opt,name=future_salt,json=futureSalt,proto3" json:"future_salt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AuthKeyInfo_Data) Reset()         { *m = AuthKeyInfo_Data{} }
func (m *AuthKeyInfo_Data) String() string { return proto.CompactTextString(m) }
func (*AuthKeyInfo_Data) ProtoMessage()    {}
func (*AuthKeyInfo_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{23}
}
func (m *AuthKeyInfo_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthKeyInfo_Data.Unmarshal(m, b)
}
func (m *AuthKeyInfo_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthKeyInfo_Data.Marshal(b, m, deterministic)
}
func (dst *AuthKeyInfo_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthKeyInfo_Data.Merge(dst, src)
}
func (m *AuthKeyInfo_Data) XXX_Size() int {
	return xxx_messageInfo_AuthKeyInfo_Data.Size(m)
}
func (m *AuthKeyInfo_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthKeyInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_AuthKeyInfo_Data proto.InternalMessageInfo

func (m *AuthKeyInfo_Data) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *AuthKeyInfo_Data) GetAuthKey() []byte {
	if m != nil {
		return m.AuthKey
	}
	return nil
}

func (m *AuthKeyInfo_Data) GetFutureSalt() *FutureSalt {
	if m != nil {
		return m.FutureSalt
	}
	return nil
}

type AuthKeyInfo struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Data2                *AuthKeyInfo_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AuthKeyInfo) Reset()         { *m = AuthKeyInfo{} }
func (m *AuthKeyInfo) String() string { return proto.CompactTextString(m) }
func (*AuthKeyInfo) ProtoMessage()    {}
func (*AuthKeyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{24}
}
func (m *AuthKeyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthKeyInfo.Unmarshal(m, b)
}
func (m *AuthKeyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthKeyInfo.Marshal(b, m, deterministic)
}
func (dst *AuthKeyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthKeyInfo.Merge(dst, src)
}
func (m *AuthKeyInfo) XXX_Size() int {
	return xxx_messageInfo_AuthKeyInfo.Size(m)
}
func (m *AuthKeyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthKeyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AuthKeyInfo proto.InternalMessageInfo

func (m *AuthKeyInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (m *AuthKeyInfo) GetData2() *AuthKeyInfo_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// authKeyInfo flags:# auth_key_id:long auth_key:bytes future_salt:flags.0?FutureSalt= AuthKeyInfo;
type TLAuthKeyInfo struct {
	Data2                *AuthKeyInfo_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLAuthKeyInfo) Reset()         { *m = TLAuthKeyInfo{} }
func (m *TLAuthKeyInfo) String() string { return proto.CompactTextString(m) }
func (*TLAuthKeyInfo) ProtoMessage()    {}
func (*TLAuthKeyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{25}
}
func (m *TLAuthKeyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLAuthKeyInfo.Unmarshal(m, b)
}
func (m *TLAuthKeyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLAuthKeyInfo.Marshal(b, m, deterministic)
}
func (dst *TLAuthKeyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthKeyInfo.Merge(dst, src)
}
func (m *TLAuthKeyInfo) XXX_Size() int {
	return xxx_messageInfo_TLAuthKeyInfo.Size(m)
}
func (m *TLAuthKeyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthKeyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthKeyInfo proto.InternalMessageInfo

func (m *TLAuthKeyInfo) GetData2() *AuthKeyInfo_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// ClientSession <--
//  + TL_clientSessionInfo
//
type ClientSession_Data struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Layer                int32    `protobuf:"varint,3,opt,name=layer,proto3" json:"layer,omitempty"`
	ApiId                int32    `protobuf:"varint,4,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	DeviceModel          string   `protobuf:"bytes,5,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	SystemVersion        string   `protobuf:"bytes,6,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	AppVersion           string   `protobuf:"bytes,7,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	SystemLangCode       string   `protobuf:"bytes,8,opt,name=system_lang_code,json=systemLangCode,proto3" json:"system_lang_code,omitempty"`
	LangPack             string   `protobuf:"bytes,9,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	LangCode             string   `protobuf:"bytes,10,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientSession_Data) Reset()         { *m = ClientSession_Data{} }
func (m *ClientSession_Data) String() string { return proto.CompactTextString(m) }
func (*ClientSession_Data) ProtoMessage()    {}
func (*ClientSession_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{26}
}
func (m *ClientSession_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientSession_Data.Unmarshal(m, b)
}
func (m *ClientSession_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientSession_Data.Marshal(b, m, deterministic)
}
func (dst *ClientSession_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientSession_Data.Merge(dst, src)
}
func (m *ClientSession_Data) XXX_Size() int {
	return xxx_messageInfo_ClientSession_Data.Size(m)
}
func (m *ClientSession_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientSession_Data.DiscardUnknown(m)
}

var xxx_messageInfo_ClientSession_Data proto.InternalMessageInfo

func (m *ClientSession_Data) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *ClientSession_Data) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ClientSession_Data) GetLayer() int32 {
	if m != nil {
		return m.Layer
	}
	return 0
}

func (m *ClientSession_Data) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *ClientSession_Data) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *ClientSession_Data) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *ClientSession_Data) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *ClientSession_Data) GetSystemLangCode() string {
	if m != nil {
		return m.SystemLangCode
	}
	return ""
}

func (m *ClientSession_Data) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

func (m *ClientSession_Data) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

type ClientSession struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Data2                *ClientSession_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ClientSession) Reset()         { *m = ClientSession{} }
func (m *ClientSession) String() string { return proto.CompactTextString(m) }
func (*ClientSession) ProtoMessage()    {}
func (*ClientSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{27}
}
func (m *ClientSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientSession.Unmarshal(m, b)
}
func (m *ClientSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientSession.Marshal(b, m, deterministic)
}
func (dst *ClientSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientSession.Merge(dst, src)
}
func (m *ClientSession) XXX_Size() int {
	return xxx_messageInfo_ClientSession.Size(m)
}
func (m *ClientSession) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientSession.DiscardUnknown(m)
}

var xxx_messageInfo_ClientSession proto.InternalMessageInfo

func (m *ClientSession) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (m *ClientSession) GetData2() *ClientSession_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// clientSessionInfo auth_key_id:long ip:string layer:int api_id:int device_model:string system_version:string app_version:string system_lang_code:string lang_pack:string lang_code:string = ClientSession;
type TLClientSessionInfo struct {
	Data2                *ClientSession_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLClientSessionInfo) Reset()         { *m = TLClientSessionInfo{} }
func (m *TLClientSessionInfo) String() string { return proto.CompactTextString(m) }
func (*TLClientSessionInfo) ProtoMessage()    {}
func (*TLClientSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{28}
}
func (m *TLClientSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLClientSessionInfo.Unmarshal(m, b)
}
func (m *TLClientSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLClientSessionInfo.Marshal(b, m, deterministic)
}
func (dst *TLClientSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLClientSessionInfo.Merge(dst, src)
}
func (m *TLClientSessionInfo) XXX_Size() int {
	return xxx_messageInfo_TLClientSessionInfo.Size(m)
}
func (m *TLClientSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLClientSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLClientSessionInfo proto.InternalMessageInfo

func (m *TLClientSessionInfo) GetData2() *ClientSession_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// ServerConnected <--
//  + TL_push_sessionServerConnected
//
type ServerConnected_Data struct {
	SessionServerId      int32    `protobuf:"varint,1,opt,name=session_server_id,json=sessionServerId,proto3" json:"session_server_id,omitempty"`
	ServerName           string   `protobuf:"bytes,2,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerConnected_Data) Reset()         { *m = ServerConnected_Data{} }
func (m *ServerConnected_Data) String() string { return proto.CompactTextString(m) }
func (*ServerConnected_Data) ProtoMessage()    {}
func (*ServerConnected_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{29}
}
func (m *ServerConnected_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerConnected_Data.Unmarshal(m, b)
}
func (m *ServerConnected_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerConnected_Data.Marshal(b, m, deterministic)
}
func (dst *ServerConnected_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerConnected_Data.Merge(dst, src)
}
func (m *ServerConnected_Data) XXX_Size() int {
	return xxx_messageInfo_ServerConnected_Data.Size(m)
}
func (m *ServerConnected_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerConnected_Data.DiscardUnknown(m)
}

var xxx_messageInfo_ServerConnected_Data proto.InternalMessageInfo

func (m *ServerConnected_Data) GetSessionServerId() int32 {
	if m != nil {
		return m.SessionServerId
	}
	return 0
}

func (m *ServerConnected_Data) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

type ServerConnected struct {
	Constructor          TLConstructor         `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Data2                *ServerConnected_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ServerConnected) Reset()         { *m = ServerConnected{} }
func (m *ServerConnected) String() string { return proto.CompactTextString(m) }
func (*ServerConnected) ProtoMessage()    {}
func (*ServerConnected) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{30}
}
func (m *ServerConnected) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerConnected.Unmarshal(m, b)
}
func (m *ServerConnected) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerConnected.Marshal(b, m, deterministic)
}
func (dst *ServerConnected) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerConnected.Merge(dst, src)
}
func (m *ServerConnected) XXX_Size() int {
	return xxx_messageInfo_ServerConnected.Size(m)
}
func (m *ServerConnected) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerConnected.DiscardUnknown(m)
}

var xxx_messageInfo_ServerConnected proto.InternalMessageInfo

func (m *ServerConnected) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (m *ServerConnected) GetData2() *ServerConnected_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// push.sessionServerConnected session_server_id:int server_name:string = ServerConnected;
type TLPushSessionServerConnected struct {
	Data2                *ServerConnected_Data `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TLPushSessionServerConnected) Reset()         { *m = TLPushSessionServerConnected{} }
func (m *TLPushSessionServerConnected) String() string { return proto.CompactTextString(m) }
func (*TLPushSessionServerConnected) ProtoMessage()    {}
func (*TLPushSessionServerConnected) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{31}
}
func (m *TLPushSessionServerConnected) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLPushSessionServerConnected.Unmarshal(m, b)
}
func (m *TLPushSessionServerConnected) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLPushSessionServerConnected.Marshal(b, m, deterministic)
}
func (dst *TLPushSessionServerConnected) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPushSessionServerConnected.Merge(dst, src)
}
func (m *TLPushSessionServerConnected) XXX_Size() int {
	return xxx_messageInfo_TLPushSessionServerConnected.Size(m)
}
func (m *TLPushSessionServerConnected) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPushSessionServerConnected.DiscardUnknown(m)
}

var xxx_messageInfo_TLPushSessionServerConnected proto.InternalMessageInfo

func (m *TLPushSessionServerConnected) GetData2() *ServerConnected_Data {
	if m != nil {
		return m.Data2
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// session.setClientSessionInfo session:ClientSession = Bool;
type TLSessionSetClientSessionInfo struct {
	Session              *ClientSession `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLSessionSetClientSessionInfo) Reset()         { *m = TLSessionSetClientSessionInfo{} }
func (m *TLSessionSetClientSessionInfo) String() string { return proto.CompactTextString(m) }
func (*TLSessionSetClientSessionInfo) ProtoMessage()    {}
func (*TLSessionSetClientSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{32}
}
func (m *TLSessionSetClientSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionSetClientSessionInfo.Unmarshal(m, b)
}
func (m *TLSessionSetClientSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionSetClientSessionInfo.Marshal(b, m, deterministic)
}
func (dst *TLSessionSetClientSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionSetClientSessionInfo.Merge(dst, src)
}
func (m *TLSessionSetClientSessionInfo) XXX_Size() int {
	return xxx_messageInfo_TLSessionSetClientSessionInfo.Size(m)
}
func (m *TLSessionSetClientSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionSetClientSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionSetClientSessionInfo proto.InternalMessageInfo

func (m *TLSessionSetClientSessionInfo) GetSession() *ClientSession {
	if m != nil {
		return m.Session
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// session.getAuthorizations user_id:int = account.Authorizations;
type TLSessionGetAuthorizations struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSessionGetAuthorizations) Reset()         { *m = TLSessionGetAuthorizations{} }
func (m *TLSessionGetAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLSessionGetAuthorizations) ProtoMessage()    {}
func (*TLSessionGetAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{33}
}
func (m *TLSessionGetAuthorizations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionGetAuthorizations.Unmarshal(m, b)
}
func (m *TLSessionGetAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionGetAuthorizations.Marshal(b, m, deterministic)
}
func (dst *TLSessionGetAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionGetAuthorizations.Merge(dst, src)
}
func (m *TLSessionGetAuthorizations) XXX_Size() int {
	return xxx_messageInfo_TLSessionGetAuthorizations.Size(m)
}
func (m *TLSessionGetAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionGetAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionGetAuthorizations proto.InternalMessageInfo

func (m *TLSessionGetAuthorizations) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// session.resetAuthorization user_id:int hash:long = Bool;
type TLSessionResetAuthorization struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Hash                 int64    `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSessionResetAuthorization) Reset()         { *m = TLSessionResetAuthorization{} }
func (m *TLSessionResetAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLSessionResetAuthorization) ProtoMessage()    {}
func (*TLSessionResetAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{34}
}
func (m *TLSessionResetAuthorization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionResetAuthorization.Unmarshal(m, b)
}
func (m *TLSessionResetAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionResetAuthorization.Marshal(b, m, deterministic)
}
func (dst *TLSessionResetAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionResetAuthorization.Merge(dst, src)
}
func (m *TLSessionResetAuthorization) XXX_Size() int {
	return xxx_messageInfo_TLSessionResetAuthorization.Size(m)
}
func (m *TLSessionResetAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionResetAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionResetAuthorization proto.InternalMessageInfo

func (m *TLSessionResetAuthorization) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *TLSessionResetAuthorization) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// session.getLayer auth_key_id:long = Int32;
type TLSessionGetLayer struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSessionGetLayer) Reset()         { *m = TLSessionGetLayer{} }
func (m *TLSessionGetLayer) String() string { return proto.CompactTextString(m) }
func (*TLSessionGetLayer) ProtoMessage()    {}
func (*TLSessionGetLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{35}
}
func (m *TLSessionGetLayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionGetLayer.Unmarshal(m, b)
}
func (m *TLSessionGetLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionGetLayer.Marshal(b, m, deterministic)
}
func (dst *TLSessionGetLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionGetLayer.Merge(dst, src)
}
func (m *TLSessionGetLayer) XXX_Size() int {
	return xxx_messageInfo_TLSessionGetLayer.Size(m)
}
func (m *TLSessionGetLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionGetLayer.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionGetLayer proto.InternalMessageInfo

func (m *TLSessionGetLayer) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// session.getLangCode auth_key_id:long = String;
type TLSessionGetLangCode struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSessionGetLangCode) Reset()         { *m = TLSessionGetLangCode{} }
func (m *TLSessionGetLangCode) String() string { return proto.CompactTextString(m) }
func (*TLSessionGetLangCode) ProtoMessage()    {}
func (*TLSessionGetLangCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{36}
}
func (m *TLSessionGetLangCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionGetLangCode.Unmarshal(m, b)
}
func (m *TLSessionGetLangCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionGetLangCode.Marshal(b, m, deterministic)
}
func (dst *TLSessionGetLangCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionGetLangCode.Merge(dst, src)
}
func (m *TLSessionGetLangCode) XXX_Size() int {
	return xxx_messageInfo_TLSessionGetLangCode.Size(m)
}
func (m *TLSessionGetLangCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionGetLangCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionGetLangCode proto.InternalMessageInfo

func (m *TLSessionGetLangCode) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// session.getUserId auth_key_id:long = Int32;
type TLSessionGetUserId struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSessionGetUserId) Reset()         { *m = TLSessionGetUserId{} }
func (m *TLSessionGetUserId) String() string { return proto.CompactTextString(m) }
func (*TLSessionGetUserId) ProtoMessage()    {}
func (*TLSessionGetUserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{37}
}
func (m *TLSessionGetUserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionGetUserId.Unmarshal(m, b)
}
func (m *TLSessionGetUserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionGetUserId.Marshal(b, m, deterministic)
}
func (dst *TLSessionGetUserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionGetUserId.Merge(dst, src)
}
func (m *TLSessionGetUserId) XXX_Size() int {
	return xxx_messageInfo_TLSessionGetUserId.Size(m)
}
func (m *TLSessionGetUserId) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionGetUserId.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionGetUserId proto.InternalMessageInfo

func (m *TLSessionGetUserId) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// session.getFutureSalts auth_key_id:long num:int = FutureSalts;
type TLSessionGetFutureSalts struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	Num                  int32    `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSessionGetFutureSalts) Reset()         { *m = TLSessionGetFutureSalts{} }
func (m *TLSessionGetFutureSalts) String() string { return proto.CompactTextString(m) }
func (*TLSessionGetFutureSalts) ProtoMessage()    {}
func (*TLSessionGetFutureSalts) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{38}
}
func (m *TLSessionGetFutureSalts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionGetFutureSalts.Unmarshal(m, b)
}
func (m *TLSessionGetFutureSalts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionGetFutureSalts.Marshal(b, m, deterministic)
}
func (dst *TLSessionGetFutureSalts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionGetFutureSalts.Merge(dst, src)
}
func (m *TLSessionGetFutureSalts) XXX_Size() int {
	return xxx_messageInfo_TLSessionGetFutureSalts.Size(m)
}
func (m *TLSessionGetFutureSalts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionGetFutureSalts.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionGetFutureSalts proto.InternalMessageInfo

func (m *TLSessionGetFutureSalts) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *TLSessionGetFutureSalts) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// session.queryAuthKey auth_key_id:long = AuthKeyInfo;
type TLSessionQueryAuthKey struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSessionQueryAuthKey) Reset()         { *m = TLSessionQueryAuthKey{} }
func (m *TLSessionQueryAuthKey) String() string { return proto.CompactTextString(m) }
func (*TLSessionQueryAuthKey) ProtoMessage()    {}
func (*TLSessionQueryAuthKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{39}
}
func (m *TLSessionQueryAuthKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionQueryAuthKey.Unmarshal(m, b)
}
func (m *TLSessionQueryAuthKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionQueryAuthKey.Marshal(b, m, deterministic)
}
func (dst *TLSessionQueryAuthKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionQueryAuthKey.Merge(dst, src)
}
func (m *TLSessionQueryAuthKey) XXX_Size() int {
	return xxx_messageInfo_TLSessionQueryAuthKey.Size(m)
}
func (m *TLSessionQueryAuthKey) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionQueryAuthKey.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionQueryAuthKey proto.InternalMessageInfo

func (m *TLSessionQueryAuthKey) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// session.setAuthKey auth_key:AuthKeyInfo = Bool;
type TLSessionSetAuthKey struct {
	AuthKey              *AuthKeyInfo `protobuf:"bytes,1,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TLSessionSetAuthKey) Reset()         { *m = TLSessionSetAuthKey{} }
func (m *TLSessionSetAuthKey) String() string { return proto.CompactTextString(m) }
func (*TLSessionSetAuthKey) ProtoMessage()    {}
func (*TLSessionSetAuthKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{40}
}
func (m *TLSessionSetAuthKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionSetAuthKey.Unmarshal(m, b)
}
func (m *TLSessionSetAuthKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionSetAuthKey.Marshal(b, m, deterministic)
}
func (dst *TLSessionSetAuthKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionSetAuthKey.Merge(dst, src)
}
func (m *TLSessionSetAuthKey) XXX_Size() int {
	return xxx_messageInfo_TLSessionSetAuthKey.Size(m)
}
func (m *TLSessionSetAuthKey) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionSetAuthKey.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionSetAuthKey proto.InternalMessageInfo

func (m *TLSessionSetAuthKey) GetAuthKey() *AuthKeyInfo {
	if m != nil {
		return m.AuthKey
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// session.bindAuthKeyUser auth_key_id:long user_id:int = Bool;
type TLSessionBindAuthKeyUser struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSessionBindAuthKeyUser) Reset()         { *m = TLSessionBindAuthKeyUser{} }
func (m *TLSessionBindAuthKeyUser) String() string { return proto.CompactTextString(m) }
func (*TLSessionBindAuthKeyUser) ProtoMessage()    {}
func (*TLSessionBindAuthKeyUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{41}
}
func (m *TLSessionBindAuthKeyUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionBindAuthKeyUser.Unmarshal(m, b)
}
func (m *TLSessionBindAuthKeyUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionBindAuthKeyUser.Marshal(b, m, deterministic)
}
func (dst *TLSessionBindAuthKeyUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionBindAuthKeyUser.Merge(dst, src)
}
func (m *TLSessionBindAuthKeyUser) XXX_Size() int {
	return xxx_messageInfo_TLSessionBindAuthKeyUser.Size(m)
}
func (m *TLSessionBindAuthKeyUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionBindAuthKeyUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionBindAuthKeyUser proto.InternalMessageInfo

func (m *TLSessionBindAuthKeyUser) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *TLSessionBindAuthKeyUser) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// session.unbindAuthKeyUser auth_key_id:long user_id:int = Bool;
type TLSessionUnbindAuthKeyUser struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSessionUnbindAuthKeyUser) Reset()         { *m = TLSessionUnbindAuthKeyUser{} }
func (m *TLSessionUnbindAuthKeyUser) String() string { return proto.CompactTextString(m) }
func (*TLSessionUnbindAuthKeyUser) ProtoMessage()    {}
func (*TLSessionUnbindAuthKeyUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{42}
}
func (m *TLSessionUnbindAuthKeyUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSessionUnbindAuthKeyUser.Unmarshal(m, b)
}
func (m *TLSessionUnbindAuthKeyUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSessionUnbindAuthKeyUser.Marshal(b, m, deterministic)
}
func (dst *TLSessionUnbindAuthKeyUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSessionUnbindAuthKeyUser.Merge(dst, src)
}
func (m *TLSessionUnbindAuthKeyUser) XXX_Size() int {
	return xxx_messageInfo_TLSessionUnbindAuthKeyUser.Size(m)
}
func (m *TLSessionUnbindAuthKeyUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSessionUnbindAuthKeyUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLSessionUnbindAuthKeyUser proto.InternalMessageInfo

func (m *TLSessionUnbindAuthKeyUser) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *TLSessionUnbindAuthKeyUser) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// sync.syncUpdates flags:# user_id:int auth_key_id:long server_id:flags.0?int updates:Updates = Bool;
type TLSyncSyncUpdates struct {
	UserId               int32    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AuthKeyId            int64    `protobuf:"varint,3,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	ServerId             int32    `protobuf:"varint,4,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Updates              *Updates `protobuf:"bytes,5,opt,name=updates,proto3" json:"updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSyncSyncUpdates) Reset()         { *m = TLSyncSyncUpdates{} }
func (m *TLSyncSyncUpdates) String() string { return proto.CompactTextString(m) }
func (*TLSyncSyncUpdates) ProtoMessage()    {}
func (*TLSyncSyncUpdates) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{43}
}
func (m *TLSyncSyncUpdates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSyncSyncUpdates.Unmarshal(m, b)
}
func (m *TLSyncSyncUpdates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSyncSyncUpdates.Marshal(b, m, deterministic)
}
func (dst *TLSyncSyncUpdates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSyncSyncUpdates.Merge(dst, src)
}
func (m *TLSyncSyncUpdates) XXX_Size() int {
	return xxx_messageInfo_TLSyncSyncUpdates.Size(m)
}
func (m *TLSyncSyncUpdates) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSyncSyncUpdates.DiscardUnknown(m)
}

var xxx_messageInfo_TLSyncSyncUpdates proto.InternalMessageInfo

func (m *TLSyncSyncUpdates) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *TLSyncSyncUpdates) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *TLSyncSyncUpdates) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *TLSyncSyncUpdates) GetUpdates() *Updates {
	if m != nil {
		return m.Updates
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// sync.pushUpdates user_id:int updates:Updates = Bool;
type TLSyncPushUpdates struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Updates              *Updates `protobuf:"bytes,2,opt,name=updates,proto3" json:"updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSyncPushUpdates) Reset()         { *m = TLSyncPushUpdates{} }
func (m *TLSyncPushUpdates) String() string { return proto.CompactTextString(m) }
func (*TLSyncPushUpdates) ProtoMessage()    {}
func (*TLSyncPushUpdates) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{44}
}
func (m *TLSyncPushUpdates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSyncPushUpdates.Unmarshal(m, b)
}
func (m *TLSyncPushUpdates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSyncPushUpdates.Marshal(b, m, deterministic)
}
func (dst *TLSyncPushUpdates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSyncPushUpdates.Merge(dst, src)
}
func (m *TLSyncPushUpdates) XXX_Size() int {
	return xxx_messageInfo_TLSyncPushUpdates.Size(m)
}
func (m *TLSyncPushUpdates) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSyncPushUpdates.DiscardUnknown(m)
}

var xxx_messageInfo_TLSyncPushUpdates proto.InternalMessageInfo

func (m *TLSyncPushUpdates) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *TLSyncPushUpdates) GetUpdates() *Updates {
	if m != nil {
		return m.Updates
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// sync.syncChannelUpdates flags:# channel_id:int user_id:int auth_key_id:long server_id:flags.0?int updates:Updates = Bool;
type TLSyncSyncChannelUpdates struct {
	ChannelId            int32    `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId               int32    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AuthKeyId            int64    `protobuf:"varint,4,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	ServerId             int32    `protobuf:"varint,5,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Updates              *Updates `protobuf:"bytes,6,opt,name=updates,proto3" json:"updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSyncSyncChannelUpdates) Reset()         { *m = TLSyncSyncChannelUpdates{} }
func (m *TLSyncSyncChannelUpdates) String() string { return proto.CompactTextString(m) }
func (*TLSyncSyncChannelUpdates) ProtoMessage()    {}
func (*TLSyncSyncChannelUpdates) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{45}
}
func (m *TLSyncSyncChannelUpdates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSyncSyncChannelUpdates.Unmarshal(m, b)
}
func (m *TLSyncSyncChannelUpdates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSyncSyncChannelUpdates.Marshal(b, m, deterministic)
}
func (dst *TLSyncSyncChannelUpdates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSyncSyncChannelUpdates.Merge(dst, src)
}
func (m *TLSyncSyncChannelUpdates) XXX_Size() int {
	return xxx_messageInfo_TLSyncSyncChannelUpdates.Size(m)
}
func (m *TLSyncSyncChannelUpdates) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSyncSyncChannelUpdates.DiscardUnknown(m)
}

var xxx_messageInfo_TLSyncSyncChannelUpdates proto.InternalMessageInfo

func (m *TLSyncSyncChannelUpdates) GetChannelId() int32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *TLSyncSyncChannelUpdates) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *TLSyncSyncChannelUpdates) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *TLSyncSyncChannelUpdates) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *TLSyncSyncChannelUpdates) GetUpdates() *Updates {
	if m != nil {
		return m.Updates
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// sync.pushChannelUpdates channel_id:int user_id:int updates:Updates = Bool;
type TLSyncPushChannelUpdates struct {
	ChannelId            int32    `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Updates              *Updates `protobuf:"bytes,3,opt,name=updates,proto3" json:"updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSyncPushChannelUpdates) Reset()         { *m = TLSyncPushChannelUpdates{} }
func (m *TLSyncPushChannelUpdates) String() string { return proto.CompactTextString(m) }
func (*TLSyncPushChannelUpdates) ProtoMessage()    {}
func (*TLSyncPushChannelUpdates) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{46}
}
func (m *TLSyncPushChannelUpdates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSyncPushChannelUpdates.Unmarshal(m, b)
}
func (m *TLSyncPushChannelUpdates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSyncPushChannelUpdates.Marshal(b, m, deterministic)
}
func (dst *TLSyncPushChannelUpdates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSyncPushChannelUpdates.Merge(dst, src)
}
func (m *TLSyncPushChannelUpdates) XXX_Size() int {
	return xxx_messageInfo_TLSyncPushChannelUpdates.Size(m)
}
func (m *TLSyncPushChannelUpdates) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSyncPushChannelUpdates.DiscardUnknown(m)
}

var xxx_messageInfo_TLSyncPushChannelUpdates proto.InternalMessageInfo

func (m *TLSyncPushChannelUpdates) GetChannelId() int32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *TLSyncPushChannelUpdates) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *TLSyncPushChannelUpdates) GetUpdates() *Updates {
	if m != nil {
		return m.Updates
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// sync.pushRpcResult server_id:int auth_key_id:long req_msg_id:long result:bytes = Bool;
type TLSyncPushRpcResult struct {
	ServerId             int32    `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	AuthKeyId            int64    `protobuf:"varint,2,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	ReqMsgId             int64    `protobuf:"varint,3,opt,name=req_msg_id,json=reqMsgId,proto3" json:"req_msg_id,omitempty"`
	Result               []byte   `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSyncPushRpcResult) Reset()         { *m = TLSyncPushRpcResult{} }
func (m *TLSyncPushRpcResult) String() string { return proto.CompactTextString(m) }
func (*TLSyncPushRpcResult) ProtoMessage()    {}
func (*TLSyncPushRpcResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{47}
}
func (m *TLSyncPushRpcResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSyncPushRpcResult.Unmarshal(m, b)
}
func (m *TLSyncPushRpcResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSyncPushRpcResult.Marshal(b, m, deterministic)
}
func (dst *TLSyncPushRpcResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSyncPushRpcResult.Merge(dst, src)
}
func (m *TLSyncPushRpcResult) XXX_Size() int {
	return xxx_messageInfo_TLSyncPushRpcResult.Size(m)
}
func (m *TLSyncPushRpcResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSyncPushRpcResult.DiscardUnknown(m)
}

var xxx_messageInfo_TLSyncPushRpcResult proto.InternalMessageInfo

func (m *TLSyncPushRpcResult) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *TLSyncPushRpcResult) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *TLSyncPushRpcResult) GetReqMsgId() int64 {
	if m != nil {
		return m.ReqMsgId
	}
	return 0
}

func (m *TLSyncPushRpcResult) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// sync.getState auth_key_id:long user_id:int = updates.State;
type TLSyncGetState struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSyncGetState) Reset()         { *m = TLSyncGetState{} }
func (m *TLSyncGetState) String() string { return proto.CompactTextString(m) }
func (*TLSyncGetState) ProtoMessage()    {}
func (*TLSyncGetState) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{48}
}
func (m *TLSyncGetState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSyncGetState.Unmarshal(m, b)
}
func (m *TLSyncGetState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSyncGetState.Marshal(b, m, deterministic)
}
func (dst *TLSyncGetState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSyncGetState.Merge(dst, src)
}
func (m *TLSyncGetState) XXX_Size() int {
	return xxx_messageInfo_TLSyncGetState.Size(m)
}
func (m *TLSyncGetState) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSyncGetState.DiscardUnknown(m)
}

var xxx_messageInfo_TLSyncGetState proto.InternalMessageInfo

func (m *TLSyncGetState) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *TLSyncGetState) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// sync.getDifference flags:# auth_key_id:long user_id:int pts:int pts_total_limit:flags.0?int date:int qts:int = updates.Difference;
type TLSyncGetDifference struct {
	AuthKeyId            int64    `protobuf:"varint,2,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	UserId               int32    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Pts                  int32    `protobuf:"varint,4,opt,name=pts,proto3" json:"pts,omitempty"`
	PtsTotalLimit        int32    `protobuf:"varint,5,opt,name=pts_total_limit,json=ptsTotalLimit,proto3" json:"pts_total_limit,omitempty"`
	Date                 int32    `protobuf:"varint,6,opt,name=date,proto3" json:"date,omitempty"`
	Qts                  int32    `protobuf:"varint,7,opt,name=qts,proto3" json:"qts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSyncGetDifference) Reset()         { *m = TLSyncGetDifference{} }
func (m *TLSyncGetDifference) String() string { return proto.CompactTextString(m) }
func (*TLSyncGetDifference) ProtoMessage()    {}
func (*TLSyncGetDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{49}
}
func (m *TLSyncGetDifference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSyncGetDifference.Unmarshal(m, b)
}
func (m *TLSyncGetDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSyncGetDifference.Marshal(b, m, deterministic)
}
func (dst *TLSyncGetDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSyncGetDifference.Merge(dst, src)
}
func (m *TLSyncGetDifference) XXX_Size() int {
	return xxx_messageInfo_TLSyncGetDifference.Size(m)
}
func (m *TLSyncGetDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSyncGetDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLSyncGetDifference proto.InternalMessageInfo

func (m *TLSyncGetDifference) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *TLSyncGetDifference) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *TLSyncGetDifference) GetPts() int32 {
	if m != nil {
		return m.Pts
	}
	return 0
}

func (m *TLSyncGetDifference) GetPtsTotalLimit() int32 {
	if m != nil {
		return m.PtsTotalLimit
	}
	return 0
}

func (m *TLSyncGetDifference) GetDate() int32 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *TLSyncGetDifference) GetQts() int32 {
	if m != nil {
		return m.Qts
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// sync.getChannelDifference flags:# auth_key_id:long user_id:int force:flags.0?true channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
type TLSyncGetChannelDifference struct {
	AuthKeyId            int64                  `protobuf:"varint,2,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	UserId               int32                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Force                bool                   `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
	Channel              *InputChannel          `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Filter               *ChannelMessagesFilter `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Pts                  int32                  `protobuf:"varint,7,opt,name=pts,proto3" json:"pts,omitempty"`
	Limit                int32                  `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLSyncGetChannelDifference) Reset()         { *m = TLSyncGetChannelDifference{} }
func (m *TLSyncGetChannelDifference) String() string { return proto.CompactTextString(m) }
func (*TLSyncGetChannelDifference) ProtoMessage()    {}
func (*TLSyncGetChannelDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{50}
}
func (m *TLSyncGetChannelDifference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSyncGetChannelDifference.Unmarshal(m, b)
}
func (m *TLSyncGetChannelDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSyncGetChannelDifference.Marshal(b, m, deterministic)
}
func (dst *TLSyncGetChannelDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSyncGetChannelDifference.Merge(dst, src)
}
func (m *TLSyncGetChannelDifference) XXX_Size() int {
	return xxx_messageInfo_TLSyncGetChannelDifference.Size(m)
}
func (m *TLSyncGetChannelDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSyncGetChannelDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLSyncGetChannelDifference proto.InternalMessageInfo

func (m *TLSyncGetChannelDifference) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *TLSyncGetChannelDifference) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *TLSyncGetChannelDifference) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLSyncGetChannelDifference) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLSyncGetChannelDifference) GetFilter() *ChannelMessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLSyncGetChannelDifference) GetPts() int32 {
	if m != nil {
		return m.Pts
	}
	return 0
}

func (m *TLSyncGetChannelDifference) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// push.connectToSessionServer sync_server_id:int = ServerConnected;
type TLPushConnectToSessionServer struct {
	SyncServerId         int32    `protobuf:"varint,1,opt,name=sync_server_id,json=syncServerId,proto3" json:"sync_server_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLPushConnectToSessionServer) Reset()         { *m = TLPushConnectToSessionServer{} }
func (m *TLPushConnectToSessionServer) String() string { return proto.CompactTextString(m) }
func (*TLPushConnectToSessionServer) ProtoMessage()    {}
func (*TLPushConnectToSessionServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{51}
}
func (m *TLPushConnectToSessionServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLPushConnectToSessionServer.Unmarshal(m, b)
}
func (m *TLPushConnectToSessionServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLPushConnectToSessionServer.Marshal(b, m, deterministic)
}
func (dst *TLPushConnectToSessionServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPushConnectToSessionServer.Merge(dst, src)
}
func (m *TLPushConnectToSessionServer) XXX_Size() int {
	return xxx_messageInfo_TLPushConnectToSessionServer.Size(m)
}
func (m *TLPushConnectToSessionServer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPushConnectToSessionServer.DiscardUnknown(m)
}

var xxx_messageInfo_TLPushConnectToSessionServer proto.InternalMessageInfo

func (m *TLPushConnectToSessionServer) GetSyncServerId() int32 {
	if m != nil {
		return m.SyncServerId
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// push.pushUpdatesData auth_key_id:long = Bool;
type TLPushPushUpdatesData struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLPushPushUpdatesData) Reset()         { *m = TLPushPushUpdatesData{} }
func (m *TLPushPushUpdatesData) String() string { return proto.CompactTextString(m) }
func (*TLPushPushUpdatesData) ProtoMessage()    {}
func (*TLPushPushUpdatesData) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{52}
}
func (m *TLPushPushUpdatesData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLPushPushUpdatesData.Unmarshal(m, b)
}
func (m *TLPushPushUpdatesData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLPushPushUpdatesData.Marshal(b, m, deterministic)
}
func (dst *TLPushPushUpdatesData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPushPushUpdatesData.Merge(dst, src)
}
func (m *TLPushPushUpdatesData) XXX_Size() int {
	return xxx_messageInfo_TLPushPushUpdatesData.Size(m)
}
func (m *TLPushPushUpdatesData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPushPushUpdatesData.DiscardUnknown(m)
}

var xxx_messageInfo_TLPushPushUpdatesData proto.InternalMessageInfo

func (m *TLPushPushUpdatesData) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// push.pushRpcResultData auth_key_id:long client_req_msg_id:long = Bool;
type TLPushPushRpcResultData struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	ClientReqMsgId       int64    `protobuf:"varint,2,opt,name=client_req_msg_id,json=clientReqMsgId,proto3" json:"client_req_msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLPushPushRpcResultData) Reset()         { *m = TLPushPushRpcResultData{} }
func (m *TLPushPushRpcResultData) String() string { return proto.CompactTextString(m) }
func (*TLPushPushRpcResultData) ProtoMessage()    {}
func (*TLPushPushRpcResultData) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{53}
}
func (m *TLPushPushRpcResultData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLPushPushRpcResultData.Unmarshal(m, b)
}
func (m *TLPushPushRpcResultData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLPushPushRpcResultData.Marshal(b, m, deterministic)
}
func (dst *TLPushPushRpcResultData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPushPushRpcResultData.Merge(dst, src)
}
func (m *TLPushPushRpcResultData) XXX_Size() int {
	return xxx_messageInfo_TLPushPushRpcResultData.Size(m)
}
func (m *TLPushPushRpcResultData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPushPushRpcResultData.DiscardUnknown(m)
}

var xxx_messageInfo_TLPushPushRpcResultData proto.InternalMessageInfo

func (m *TLPushPushRpcResultData) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *TLPushPushRpcResultData) GetClientReqMsgId() int64 {
	if m != nil {
		return m.ClientReqMsgId
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////
// bot.executeCommand bot_id:int peer_type:int peer_id:int command_line:string = Message;
type TLBotExecuteCommand struct {
	BotId                int32    `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	PeerType             int32    `protobuf:"varint,2,opt,name=peer_type,json=peerType,proto3" json:"peer_type,omitempty"`
	PeerId               int32    `protobuf:"varint,3,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	CommandLine          string   `protobuf:"bytes,4,opt,name=command_line,json=commandLine,proto3" json:"command_line,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLBotExecuteCommand) Reset()         { *m = TLBotExecuteCommand{} }
func (m *TLBotExecuteCommand) String() string { return proto.CompactTextString(m) }
func (*TLBotExecuteCommand) ProtoMessage()    {}
func (*TLBotExecuteCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_tl_a4c57e0d0b3a2b43, []int{54}
}
func (m *TLBotExecuteCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLBotExecuteCommand.Unmarshal(m, b)
}
func (m *TLBotExecuteCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLBotExecuteCommand.Marshal(b, m, deterministic)
}
func (dst *TLBotExecuteCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBotExecuteCommand.Merge(dst, src)
}
func (m *TLBotExecuteCommand) XXX_Size() int {
	return xxx_messageInfo_TLBotExecuteCommand.Size(m)
}
func (m *TLBotExecuteCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBotExecuteCommand.DiscardUnknown(m)
}

var xxx_messageInfo_TLBotExecuteCommand proto.InternalMessageInfo

func (m *TLBotExecuteCommand) GetBotId() int32 {
	if m != nil {
		return m.BotId
	}
	return 0
}

func (m *TLBotExecuteCommand) GetPeerType() int32 {
	if m != nil {
		return m.PeerType
	}
	return 0
}

func (m *TLBotExecuteCommand) GetPeerId() int32 {
	if m != nil {
		return m.PeerId
	}
	return 0
}

func (m *TLBotExecuteCommand) GetCommandLine() string {
	if m != nil {
		return m.CommandLine
	}
	return ""
}

func init() {
	proto.RegisterType((*SessionClientEvent_Data)(nil), "mtproto.SessionClientEvent_Data")
	proto.RegisterType((*SessionClientEvent)(nil), "mtproto.SessionClientEvent")
	proto.RegisterType((*TLSessionClientCreated)(nil), "mtproto.TL_sessionClientCreated")
	proto.RegisterType((*TLSessionClientClosed)(nil), "mtproto.TL_sessionClientClosed")
	proto.RegisterType((*RawMessageData_Data)(nil), "mtproto.RawMessageData_Data")
	proto.RegisterType((*RawMessageData)(nil), "mtproto.RawMessageData")
	proto.RegisterType((*TLHandshakeData)(nil), "mtproto.TL_handshakeData")
	proto.RegisterType((*TLSessionMessageData)(nil), "mtproto.TL_sessionMessageData")
	proto.RegisterType((*Int64_Data)(nil), "mtproto.Int64_Data")
	proto.RegisterType((*Int64)(nil), "mtproto.Int64")
	proto.RegisterType((*TLLong)(nil), "mtproto.TL_long")
	proto.RegisterType((*String_Data)(nil), "mtproto.String_Data")
	proto.RegisterType((*String)(nil), "mtproto.String")
	proto.RegisterType((*TLString)(nil), "mtproto.TL_string")
	proto.RegisterType((*RSAPublicKey_Data)(nil), "mtproto.RSAPublicKey_Data")
	proto.RegisterType((*RSAPublicKey)(nil), "mtproto.RSAPublicKey")
	proto.RegisterType((*TLRsaPublicKey)(nil), "mtproto.TL_rsa_public_key")
	proto.RegisterType((*HandshakeContext_Data)(nil), "mtproto.HandshakeContext_Data")
	proto.RegisterType((*HandshakeContext)(nil), "mtproto.HandshakeContext")
	proto.RegisterType((*TLHandshakeContext)(nil), "mtproto.TL_handshakeContext")
	proto.RegisterType((*Int32_Data)(nil), "mtproto.Int32_Data")
	proto.RegisterType((*Int32)(nil), "mtproto.Int32")
	proto.RegisterType((*TLInt32)(nil), "mtproto.TL_int32")
	proto.RegisterType((*AuthKeyInfo_Data)(nil), "mtproto.AuthKeyInfo_Data")
	proto.RegisterType((*AuthKeyInfo)(nil), "mtproto.AuthKeyInfo")
	proto.RegisterType((*TLAuthKeyInfo)(nil), "mtproto.TL_authKeyInfo")
	proto.RegisterType((*ClientSession_Data)(nil), "mtproto.ClientSession_Data")
	proto.RegisterType((*ClientSession)(nil), "mtproto.ClientSession")
	proto.RegisterType((*TLClientSessionInfo)(nil), "mtproto.TL_clientSessionInfo")
	proto.RegisterType((*ServerConnected_Data)(nil), "mtproto.ServerConnected_Data")
	proto.RegisterType((*ServerConnected)(nil), "mtproto.ServerConnected")
	proto.RegisterType((*TLPushSessionServerConnected)(nil), "mtproto.TL_push_sessionServerConnected")
	proto.RegisterType((*TLSessionSetClientSessionInfo)(nil), "mtproto.TL_session_setClientSessionInfo")
	proto.RegisterType((*TLSessionGetAuthorizations)(nil), "mtproto.TL_session_getAuthorizations")
	proto.RegisterType((*TLSessionResetAuthorization)(nil), "mtproto.TL_session_resetAuthorization")
	proto.RegisterType((*TLSessionGetLayer)(nil), "mtproto.TL_session_getLayer")
	proto.RegisterType((*TLSessionGetLangCode)(nil), "mtproto.TL_session_getLangCode")
	proto.RegisterType((*TLSessionGetUserId)(nil), "mtproto.TL_session_getUserId")
	proto.RegisterType((*TLSessionGetFutureSalts)(nil), "mtproto.TL_session_getFutureSalts")
	proto.RegisterType((*TLSessionQueryAuthKey)(nil), "mtproto.TL_session_queryAuthKey")
	proto.RegisterType((*TLSessionSetAuthKey)(nil), "mtproto.TL_session_setAuthKey")
	proto.RegisterType((*TLSessionBindAuthKeyUser)(nil), "mtproto.TL_session_bindAuthKeyUser")
	proto.RegisterType((*TLSessionUnbindAuthKeyUser)(nil), "mtproto.TL_session_unbindAuthKeyUser")
	proto.RegisterType((*TLSyncSyncUpdates)(nil), "mtproto.TL_sync_syncUpdates")
	proto.RegisterType((*TLSyncPushUpdates)(nil), "mtproto.TL_sync_pushUpdates")
	proto.RegisterType((*TLSyncSyncChannelUpdates)(nil), "mtproto.TL_sync_syncChannelUpdates")
	proto.RegisterType((*TLSyncPushChannelUpdates)(nil), "mtproto.TL_sync_pushChannelUpdates")
	proto.RegisterType((*TLSyncPushRpcResult)(nil), "mtproto.TL_sync_pushRpcResult")
	proto.RegisterType((*TLSyncGetState)(nil), "mtproto.TL_sync_getState")
	proto.RegisterType((*TLSyncGetDifference)(nil), "mtproto.TL_sync_getDifference")
	proto.RegisterType((*TLSyncGetChannelDifference)(nil), "mtproto.TL_sync_getChannelDifference")
	proto.RegisterType((*TLPushConnectToSessionServer)(nil), "mtproto.TL_push_connectToSessionServer")
	proto.RegisterType((*TLPushPushUpdatesData)(nil), "mtproto.TL_push_pushUpdatesData")
	proto.RegisterType((*TLPushPushRpcResultData)(nil), "mtproto.TL_push_pushRpcResultData")
	proto.RegisterType((*TLBotExecuteCommand)(nil), "mtproto.TL_bot_executeCommand")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCBotClient is the client API for RPCBot service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCBotClient interface {
	// bot.executeCommand bot_id:int peer_type:int peer_id:int command_line:string = Message;
	BotExecuteCommand(ctx context.Context, in *TLBotExecuteCommand, opts ...grpc.CallOption) (*Message, error)
}

type rPCBotClient struct {
	cc *grpc.ClientConn
}

func NewRPCBotClient(cc *grpc.ClientConn) RPCBotClient {
	return &rPCBotClient{cc}
}

func (c *rPCBotClient) BotExecuteCommand(ctx context.Context, in *TLBotExecuteCommand, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBot/bot_executeCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCBotServer is the server API for RPCBot service.
type RPCBotServer interface {
	// bot.executeCommand bot_id:int peer_type:int peer_id:int command_line:string = Message;
	BotExecuteCommand(context.Context, *TLBotExecuteCommand) (*Message, error)
}

func RegisterRPCBotServer(s *grpc.Server, srv RPCBotServer) {
	s.RegisterService(&_RPCBot_serviceDesc, srv)
}

func _RPCBot_BotExecuteCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBotExecuteCommand)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBotServer).BotExecuteCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBot/BotExecuteCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBotServer).BotExecuteCommand(ctx, req.(*TLBotExecuteCommand))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCBot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCBot",
	HandlerType: (*RPCBotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "bot_executeCommand",
			Handler:    _RPCBot_BotExecuteCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.tl.proto",
}

// RPCSessionClient is the client API for RPCSession service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCSessionClient interface {
	// session.setClientSessionInfo session:ClientSession = Bool;
	SessionSetClientSessionInfo(ctx context.Context, in *TLSessionSetClientSessionInfo, opts ...grpc.CallOption) (*Bool, error)
	// session.getAuthorizations user_id:int = account.Authorizations;
	SessionGetAuthorizations(ctx context.Context, in *TLSessionGetAuthorizations, opts ...grpc.CallOption) (*Account_Authorizations, error)
	// session.resetAuthorization user_id:int hash:long = Bool;
	SessionResetAuthorization(ctx context.Context, in *TLSessionResetAuthorization, opts ...grpc.CallOption) (*Bool, error)
	// session.getLayer auth_key_id:long = Int32;
	SessionGetLayer(ctx context.Context, in *TLSessionGetLayer, opts ...grpc.CallOption) (*Int32, error)
	// session.getLangCode auth_key_id:long = String;
	SessionGetLangCode(ctx context.Context, in *TLSessionGetLangCode, opts ...grpc.CallOption) (*String, error)
	// session.getUserId auth_key_id:long = Int32;
	SessionGetUserId(ctx context.Context, in *TLSessionGetUserId, opts ...grpc.CallOption) (*Int32, error)
	// session.getFutureSalts auth_key_id:long num:int = FutureSalts;
	SessionGetFutureSalts(ctx context.Context, in *TLSessionGetFutureSalts, opts ...grpc.CallOption) (*FutureSalts, error)
	// session.queryAuthKey auth_key_id:long = AuthKeyInfo;
	SessionQueryAuthKey(ctx context.Context, in *TLSessionQueryAuthKey, opts ...grpc.CallOption) (*AuthKeyInfo, error)
	// session.setAuthKey auth_key:AuthKeyInfo = Bool;
	SessionSetAuthKey(ctx context.Context, in *TLSessionSetAuthKey, opts ...grpc.CallOption) (*Bool, error)
	// session.bindAuthKeyUser auth_key_id:long user_id:int = Bool;
	SessionBindAuthKeyUser(ctx context.Context, in *TLSessionBindAuthKeyUser, opts ...grpc.CallOption) (*Bool, error)
	// session.unbindAuthKeyUser auth_key_id:long user_id:int = Bool;
	SessionUnbindAuthKeyUser(ctx context.Context, in *TLSessionUnbindAuthKeyUser, opts ...grpc.CallOption) (*Bool, error)
}

type rPCSessionClient struct {
	cc *grpc.ClientConn
}

func NewRPCSessionClient(cc *grpc.ClientConn) RPCSessionClient {
	return &rPCSessionClient{cc}
}

func (c *rPCSessionClient) SessionSetClientSessionInfo(ctx context.Context, in *TLSessionSetClientSessionInfo, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSession/session_setClientSessionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSessionClient) SessionGetAuthorizations(ctx context.Context, in *TLSessionGetAuthorizations, opts ...grpc.CallOption) (*Account_Authorizations, error) {
	out := new(Account_Authorizations)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSession/session_getAuthorizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSessionClient) SessionResetAuthorization(ctx context.Context, in *TLSessionResetAuthorization, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSession/session_resetAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSessionClient) SessionGetLayer(ctx context.Context, in *TLSessionGetLayer, opts ...grpc.CallOption) (*Int32, error) {
	out := new(Int32)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSession/session_getLayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSessionClient) SessionGetLangCode(ctx context.Context, in *TLSessionGetLangCode, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSession/session_getLangCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSessionClient) SessionGetUserId(ctx context.Context, in *TLSessionGetUserId, opts ...grpc.CallOption) (*Int32, error) {
	out := new(Int32)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSession/session_getUserId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSessionClient) SessionGetFutureSalts(ctx context.Context, in *TLSessionGetFutureSalts, opts ...grpc.CallOption) (*FutureSalts, error) {
	out := new(FutureSalts)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSession/session_getFutureSalts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSessionClient) SessionQueryAuthKey(ctx context.Context, in *TLSessionQueryAuthKey, opts ...grpc.CallOption) (*AuthKeyInfo, error) {
	out := new(AuthKeyInfo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSession/session_queryAuthKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSessionClient) SessionSetAuthKey(ctx context.Context, in *TLSessionSetAuthKey, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSession/session_setAuthKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSessionClient) SessionBindAuthKeyUser(ctx context.Context, in *TLSessionBindAuthKeyUser, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSession/session_bindAuthKeyUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSessionClient) SessionUnbindAuthKeyUser(ctx context.Context, in *TLSessionUnbindAuthKeyUser, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSession/session_unbindAuthKeyUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCSessionServer is the server API for RPCSession service.
type RPCSessionServer interface {
	// session.setClientSessionInfo session:ClientSession = Bool;
	SessionSetClientSessionInfo(context.Context, *TLSessionSetClientSessionInfo) (*Bool, error)
	// session.getAuthorizations user_id:int = account.Authorizations;
	SessionGetAuthorizations(context.Context, *TLSessionGetAuthorizations) (*Account_Authorizations, error)
	// session.resetAuthorization user_id:int hash:long = Bool;
	SessionResetAuthorization(context.Context, *TLSessionResetAuthorization) (*Bool, error)
	// session.getLayer auth_key_id:long = Int32;
	SessionGetLayer(context.Context, *TLSessionGetLayer) (*Int32, error)
	// session.getLangCode auth_key_id:long = String;
	SessionGetLangCode(context.Context, *TLSessionGetLangCode) (*String, error)
	// session.getUserId auth_key_id:long = Int32;
	SessionGetUserId(context.Context, *TLSessionGetUserId) (*Int32, error)
	// session.getFutureSalts auth_key_id:long num:int = FutureSalts;
	SessionGetFutureSalts(context.Context, *TLSessionGetFutureSalts) (*FutureSalts, error)
	// session.queryAuthKey auth_key_id:long = AuthKeyInfo;
	SessionQueryAuthKey(context.Context, *TLSessionQueryAuthKey) (*AuthKeyInfo, error)
	// session.setAuthKey auth_key:AuthKeyInfo = Bool;
	SessionSetAuthKey(context.Context, *TLSessionSetAuthKey) (*Bool, error)
	// session.bindAuthKeyUser auth_key_id:long user_id:int = Bool;
	SessionBindAuthKeyUser(context.Context, *TLSessionBindAuthKeyUser) (*Bool, error)
	// session.unbindAuthKeyUser auth_key_id:long user_id:int = Bool;
	SessionUnbindAuthKeyUser(context.Context, *TLSessionUnbindAuthKeyUser) (*Bool, error)
}

func RegisterRPCSessionServer(s *grpc.Server, srv RPCSessionServer) {
	s.RegisterService(&_RPCSession_serviceDesc, srv)
}

func _RPCSession_SessionSetClientSessionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSessionSetClientSessionInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSessionServer).SessionSetClientSessionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSession/SessionSetClientSessionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSessionServer).SessionSetClientSessionInfo(ctx, req.(*TLSessionSetClientSessionInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSession_SessionGetAuthorizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSessionGetAuthorizations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSessionServer).SessionGetAuthorizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSession/SessionGetAuthorizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSessionServer).SessionGetAuthorizations(ctx, req.(*TLSessionGetAuthorizations))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSession_SessionResetAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSessionResetAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSessionServer).SessionResetAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSession/SessionResetAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSessionServer).SessionResetAuthorization(ctx, req.(*TLSessionResetAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSession_SessionGetLayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSessionGetLayer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSessionServer).SessionGetLayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSession/SessionGetLayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSessionServer).SessionGetLayer(ctx, req.(*TLSessionGetLayer))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSession_SessionGetLangCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSessionGetLangCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSessionServer).SessionGetLangCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSession/SessionGetLangCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSessionServer).SessionGetLangCode(ctx, req.(*TLSessionGetLangCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSession_SessionGetUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSessionGetUserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSessionServer).SessionGetUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSession/SessionGetUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSessionServer).SessionGetUserId(ctx, req.(*TLSessionGetUserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSession_SessionGetFutureSalts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSessionGetFutureSalts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSessionServer).SessionGetFutureSalts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSession/SessionGetFutureSalts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSessionServer).SessionGetFutureSalts(ctx, req.(*TLSessionGetFutureSalts))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSession_SessionQueryAuthKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSessionQueryAuthKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSessionServer).SessionQueryAuthKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSession/SessionQueryAuthKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSessionServer).SessionQueryAuthKey(ctx, req.(*TLSessionQueryAuthKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSession_SessionSetAuthKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSessionSetAuthKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSessionServer).SessionSetAuthKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSession/SessionSetAuthKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSessionServer).SessionSetAuthKey(ctx, req.(*TLSessionSetAuthKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSession_SessionBindAuthKeyUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSessionBindAuthKeyUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSessionServer).SessionBindAuthKeyUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSession/SessionBindAuthKeyUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSessionServer).SessionBindAuthKeyUser(ctx, req.(*TLSessionBindAuthKeyUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSession_SessionUnbindAuthKeyUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSessionUnbindAuthKeyUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSessionServer).SessionUnbindAuthKeyUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSession/SessionUnbindAuthKeyUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSessionServer).SessionUnbindAuthKeyUser(ctx, req.(*TLSessionUnbindAuthKeyUser))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCSession_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCSession",
	HandlerType: (*RPCSessionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "session_setClientSessionInfo",
			Handler:    _RPCSession_SessionSetClientSessionInfo_Handler,
		},
		{
			MethodName: "session_getAuthorizations",
			Handler:    _RPCSession_SessionGetAuthorizations_Handler,
		},
		{
			MethodName: "session_resetAuthorization",
			Handler:    _RPCSession_SessionResetAuthorization_Handler,
		},
		{
			MethodName: "session_getLayer",
			Handler:    _RPCSession_SessionGetLayer_Handler,
		},
		{
			MethodName: "session_getLangCode",
			Handler:    _RPCSession_SessionGetLangCode_Handler,
		},
		{
			MethodName: "session_getUserId",
			Handler:    _RPCSession_SessionGetUserId_Handler,
		},
		{
			MethodName: "session_getFutureSalts",
			Handler:    _RPCSession_SessionGetFutureSalts_Handler,
		},
		{
			MethodName: "session_queryAuthKey",
			Handler:    _RPCSession_SessionQueryAuthKey_Handler,
		},
		{
			MethodName: "session_setAuthKey",
			Handler:    _RPCSession_SessionSetAuthKey_Handler,
		},
		{
			MethodName: "session_bindAuthKeyUser",
			Handler:    _RPCSession_SessionBindAuthKeyUser_Handler,
		},
		{
			MethodName: "session_unbindAuthKeyUser",
			Handler:    _RPCSession_SessionUnbindAuthKeyUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.tl.proto",
}

// RPCSyncClient is the client API for RPCSync service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCSyncClient interface {
	// sync.syncUpdates flags:# user_id:int auth_key_id:long server_id:flags.0?int updates:Updates = Bool;
	SyncSyncUpdates(ctx context.Context, in *TLSyncSyncUpdates, opts ...grpc.CallOption) (*Bool, error)
	// sync.pushUpdates user_id:int updates:Updates = Bool;
	SyncPushUpdates(ctx context.Context, in *TLSyncPushUpdates, opts ...grpc.CallOption) (*Bool, error)
	// sync.syncChannelUpdates flags:# channel_id:int user_id:int auth_key_id:long server_id:flags.0?int updates:Updates = Bool;
	SyncSyncChannelUpdates(ctx context.Context, in *TLSyncSyncChannelUpdates, opts ...grpc.CallOption) (*Bool, error)
	// sync.pushChannelUpdates channel_id:int user_id:int updates:Updates = Bool;
	SyncPushChannelUpdates(ctx context.Context, in *TLSyncPushChannelUpdates, opts ...grpc.CallOption) (*Bool, error)
	// sync.pushRpcResult server_id:int auth_key_id:long req_msg_id:long result:bytes = Bool;
	SyncPushRpcResult(ctx context.Context, in *TLSyncPushRpcResult, opts ...grpc.CallOption) (*Bool, error)
	// sync.getState auth_key_id:long user_id:int = updates.State;
	SyncGetState(ctx context.Context, in *TLSyncGetState, opts ...grpc.CallOption) (*Updates_State, error)
	// sync.getDifference flags:# auth_key_id:long user_id:int pts:int pts_total_limit:flags.0?int date:int qts:int = updates.Difference;
	SyncGetDifference(ctx context.Context, in *TLSyncGetDifference, opts ...grpc.CallOption) (*Updates_Difference, error)
	// sync.getChannelDifference flags:# auth_key_id:long user_id:int force:flags.0?true channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
	SyncGetChannelDifference(ctx context.Context, in *TLSyncGetChannelDifference, opts ...grpc.CallOption) (*Updates_ChannelDifference, error)
}

type rPCSyncClient struct {
	cc *grpc.ClientConn
}

func NewRPCSyncClient(cc *grpc.ClientConn) RPCSyncClient {
	return &rPCSyncClient{cc}
}

func (c *rPCSyncClient) SyncSyncUpdates(ctx context.Context, in *TLSyncSyncUpdates, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSync/sync_syncUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSyncClient) SyncPushUpdates(ctx context.Context, in *TLSyncPushUpdates, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSync/sync_pushUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSyncClient) SyncSyncChannelUpdates(ctx context.Context, in *TLSyncSyncChannelUpdates, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSync/sync_syncChannelUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSyncClient) SyncPushChannelUpdates(ctx context.Context, in *TLSyncPushChannelUpdates, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSync/sync_pushChannelUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSyncClient) SyncPushRpcResult(ctx context.Context, in *TLSyncPushRpcResult, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSync/sync_pushRpcResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSyncClient) SyncGetState(ctx context.Context, in *TLSyncGetState, opts ...grpc.CallOption) (*Updates_State, error) {
	out := new(Updates_State)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSync/sync_getState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSyncClient) SyncGetDifference(ctx context.Context, in *TLSyncGetDifference, opts ...grpc.CallOption) (*Updates_Difference, error) {
	out := new(Updates_Difference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSync/sync_getDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSyncClient) SyncGetChannelDifference(ctx context.Context, in *TLSyncGetChannelDifference, opts ...grpc.CallOption) (*Updates_ChannelDifference, error) {
	out := new(Updates_ChannelDifference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSync/sync_getChannelDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCSyncServer is the server API for RPCSync service.
type RPCSyncServer interface {
	// sync.syncUpdates flags:# user_id:int auth_key_id:long server_id:flags.0?int updates:Updates = Bool;
	SyncSyncUpdates(context.Context, *TLSyncSyncUpdates) (*Bool, error)
	// sync.pushUpdates user_id:int updates:Updates = Bool;
	SyncPushUpdates(context.Context, *TLSyncPushUpdates) (*Bool, error)
	// sync.syncChannelUpdates flags:# channel_id:int user_id:int auth_key_id:long server_id:flags.0?int updates:Updates = Bool;
	SyncSyncChannelUpdates(context.Context, *TLSyncSyncChannelUpdates) (*Bool, error)
	// sync.pushChannelUpdates channel_id:int user_id:int updates:Updates = Bool;
	SyncPushChannelUpdates(context.Context, *TLSyncPushChannelUpdates) (*Bool, error)
	// sync.pushRpcResult server_id:int auth_key_id:long req_msg_id:long result:bytes = Bool;
	SyncPushRpcResult(context.Context, *TLSyncPushRpcResult) (*Bool, error)
	// sync.getState auth_key_id:long user_id:int = updates.State;
	SyncGetState(context.Context, *TLSyncGetState) (*Updates_State, error)
	// sync.getDifference flags:# auth_key_id:long user_id:int pts:int pts_total_limit:flags.0?int date:int qts:int = updates.Difference;
	SyncGetDifference(context.Context, *TLSyncGetDifference) (*Updates_Difference, error)
	// sync.getChannelDifference flags:# auth_key_id:long user_id:int force:flags.0?true channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
	SyncGetChannelDifference(context.Context, *TLSyncGetChannelDifference) (*Updates_ChannelDifference, error)
}

func RegisterRPCSyncServer(s *grpc.Server, srv RPCSyncServer) {
	s.RegisterService(&_RPCSync_serviceDesc, srv)
}

func _RPCSync_SyncSyncUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSyncSyncUpdates)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSyncServer).SyncSyncUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSync/SyncSyncUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSyncServer).SyncSyncUpdates(ctx, req.(*TLSyncSyncUpdates))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSync_SyncPushUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSyncPushUpdates)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSyncServer).SyncPushUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSync/SyncPushUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSyncServer).SyncPushUpdates(ctx, req.(*TLSyncPushUpdates))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSync_SyncSyncChannelUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSyncSyncChannelUpdates)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSyncServer).SyncSyncChannelUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSync/SyncSyncChannelUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSyncServer).SyncSyncChannelUpdates(ctx, req.(*TLSyncSyncChannelUpdates))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSync_SyncPushChannelUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSyncPushChannelUpdates)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSyncServer).SyncPushChannelUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSync/SyncPushChannelUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSyncServer).SyncPushChannelUpdates(ctx, req.(*TLSyncPushChannelUpdates))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSync_SyncPushRpcResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSyncPushRpcResult)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSyncServer).SyncPushRpcResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSync/SyncPushRpcResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSyncServer).SyncPushRpcResult(ctx, req.(*TLSyncPushRpcResult))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSync_SyncGetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSyncGetState)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSyncServer).SyncGetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSync/SyncGetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSyncServer).SyncGetState(ctx, req.(*TLSyncGetState))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSync_SyncGetDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSyncGetDifference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSyncServer).SyncGetDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSync/SyncGetDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSyncServer).SyncGetDifference(ctx, req.(*TLSyncGetDifference))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSync_SyncGetChannelDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLSyncGetChannelDifference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSyncServer).SyncGetChannelDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSync/SyncGetChannelDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSyncServer).SyncGetChannelDifference(ctx, req.(*TLSyncGetChannelDifference))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCSync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCSync",
	HandlerType: (*RPCSyncServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sync_syncUpdates",
			Handler:    _RPCSync_SyncSyncUpdates_Handler,
		},
		{
			MethodName: "sync_pushUpdates",
			Handler:    _RPCSync_SyncPushUpdates_Handler,
		},
		{
			MethodName: "sync_syncChannelUpdates",
			Handler:    _RPCSync_SyncSyncChannelUpdates_Handler,
		},
		{
			MethodName: "sync_pushChannelUpdates",
			Handler:    _RPCSync_SyncPushChannelUpdates_Handler,
		},
		{
			MethodName: "sync_pushRpcResult",
			Handler:    _RPCSync_SyncPushRpcResult_Handler,
		},
		{
			MethodName: "sync_getState",
			Handler:    _RPCSync_SyncGetState_Handler,
		},
		{
			MethodName: "sync_getDifference",
			Handler:    _RPCSync_SyncGetDifference_Handler,
		},
		{
			MethodName: "sync_getChannelDifference",
			Handler:    _RPCSync_SyncGetChannelDifference_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.tl.proto",
}

// RPCPushClient is the client API for RPCPush service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCPushClient interface {
	// push.connectToSessionServer sync_server_id:int = ServerConnected;
	PushConnectToSessionServer(ctx context.Context, in *TLPushConnectToSessionServer, opts ...grpc.CallOption) (*ServerConnected, error)
	// push.pushUpdatesData auth_key_id:long = Bool;
	PushPushUpdatesData(ctx context.Context, in *TLPushPushUpdatesData, opts ...grpc.CallOption) (*Bool, error)
	// push.pushRpcResultData auth_key_id:long client_req_msg_id:long = Bool;
	PushPushRpcResultData(ctx context.Context, in *TLPushPushRpcResultData, opts ...grpc.CallOption) (*Bool, error)
}

type rPCPushClient struct {
	cc *grpc.ClientConn
}

func NewRPCPushClient(cc *grpc.ClientConn) RPCPushClient {
	return &rPCPushClient{cc}
}

func (c *rPCPushClient) PushConnectToSessionServer(ctx context.Context, in *TLPushConnectToSessionServer, opts ...grpc.CallOption) (*ServerConnected, error) {
	out := new(ServerConnected)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPush/push_connectToSessionServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPushClient) PushPushUpdatesData(ctx context.Context, in *TLPushPushUpdatesData, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPush/push_pushUpdatesData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPushClient) PushPushRpcResultData(ctx context.Context, in *TLPushPushRpcResultData, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPush/push_pushRpcResultData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCPushServer is the server API for RPCPush service.
type RPCPushServer interface {
	// push.connectToSessionServer sync_server_id:int = ServerConnected;
	PushConnectToSessionServer(context.Context, *TLPushConnectToSessionServer) (*ServerConnected, error)
	// push.pushUpdatesData auth_key_id:long = Bool;
	PushPushUpdatesData(context.Context, *TLPushPushUpdatesData) (*Bool, error)
	// push.pushRpcResultData auth_key_id:long client_req_msg_id:long = Bool;
	PushPushRpcResultData(context.Context, *TLPushPushRpcResultData) (*Bool, error)
}

func RegisterRPCPushServer(s *grpc.Server, srv RPCPushServer) {
	s.RegisterService(&_RPCPush_serviceDesc, srv)
}

func _RPCPush_PushConnectToSessionServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPushConnectToSessionServer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPushServer).PushConnectToSessionServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPush/PushConnectToSessionServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPushServer).PushConnectToSessionServer(ctx, req.(*TLPushConnectToSessionServer))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPush_PushPushUpdatesData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPushPushUpdatesData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPushServer).PushPushUpdatesData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPush/PushPushUpdatesData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPushServer).PushPushUpdatesData(ctx, req.(*TLPushPushUpdatesData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPush_PushPushRpcResultData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPushPushRpcResultData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPushServer).PushPushRpcResultData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPush/PushPushRpcResultData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPushServer).PushPushRpcResultData(ctx, req.(*TLPushPushRpcResultData))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCPush_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCPush",
	HandlerType: (*RPCPushServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "push_connectToSessionServer",
			Handler:    _RPCPush_PushConnectToSessionServer_Handler,
		},
		{
			MethodName: "push_pushUpdatesData",
			Handler:    _RPCPush_PushPushUpdatesData_Handler,
		},
		{
			MethodName: "push_pushRpcResultData",
			Handler:    _RPCPush_PushPushRpcResultData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.tl.proto",
}

func init() { proto.RegisterFile("service.tl.proto", fileDescriptor_service_tl_a4c57e0d0b3a2b43) }

var fileDescriptor_service_tl_a4c57e0d0b3a2b43 = []byte{
	// 2134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x5b, 0x6f, 0xdb, 0xc8,
	0xf5, 0x37, 0xa5, 0xe8, 0x76, 0x24, 0x3b, 0x0e, 0x63, 0x3b, 0xb6, 0xec, 0x38, 0xfe, 0x33, 0x9b,
	0xfd, 0x67, 0xb3, 0x80, 0xb3, 0x95, 0xb3, 0xd9, 0xed, 0xa3, 0xad, 0x24, 0x88, 0x11, 0xb9, 0x75,
	0x69, 0xb9, 0x45, 0xfb, 0x42, 0xd0, 0xd4, 0x58, 0x22, 0x4c, 0x0d, 0x69, 0xce, 0xc8, 0x89, 0x16,
	0x8b, 0x62, 0xd1, 0x02, 0x5d, 0xa0, 0x2f, 0x7d, 0xec, 0xd7, 0xe8, 0x17, 0x28, 0xd0, 0x87, 0x7e,
	0xa5, 0x3e, 0xb6, 0x28, 0xe6, 0x42, 0x71, 0x78, 0xb3, 0x12, 0x7b, 0xfb, 0x22, 0x88, 0x73, 0x2e,
	0xf3, 0x3b, 0x97, 0x39, 0xfc, 0x0d, 0x61, 0x99, 0xa0, 0xf0, 0xca, 0x75, 0xd0, 0x2e, 0xf5, 0x76,
	0x83, 0xd0, 0xa7, 0xbe, 0x5e, 0x1b, 0x53, 0xfe, 0xa7, 0xbd, 0x4a, 0x9c, 0x11, 0x1a, 0xdb, 0x4c,
	0xe2, 0x84, 0xce, 0x5e, 0x47, 0xc8, 0xdb, 0x6d, 0x65, 0xd9, 0x0f, 0x91, 0x45, 0xa7, 0x01, 0x22,
	0x52, 0xb6, 0x11, 0xcb, 0x68, 0x68, 0x63, 0x12, 0xf8, 0x21, 0x95, 0xa2, 0x95, 0x58, 0x44, 0xa6,
	0xd8, 0x11, 0xab, 0xc6, 0xf7, 0xf0, 0xe0, 0x04, 0x11, 0xe2, 0xfa, 0xb8, 0xeb, 0xb9, 0x08, 0xd3,
	0xd7, 0x57, 0x08, 0x53, 0xeb, 0x95, 0x4d, 0x6d, 0x7d, 0x1b, 0x9a, 0xf6, 0x84, 0x8e, 0xac, 0x0b,
	0x34, 0xb5, 0xdc, 0xc1, 0xba, 0xb6, 0xa3, 0x3d, 0x2d, 0x9b, 0x0d, 0xb6, 0xf4, 0x0e, 0x4d, 0x0f,
	0x07, 0xfa, 0x67, 0xb0, 0xe4, 0x70, 0x1b, 0xcb, 0xf1, 0x31, 0x66, 0x2a, 0x25, 0xae, 0xd2, 0x12,
	0xab, 0x5d, 0x1f, 0xe3, 0xc3, 0x81, 0xbe, 0x09, 0x0d, 0x2e, 0x66, 0x28, 0xd7, 0xcb, 0x3b, 0xda,
	0xd3, 0x8a, 0x59, 0x67, 0x0b, 0xfd, 0x69, 0x80, 0x8c, 0x3f, 0x69, 0xa0, 0x67, 0xb7, 0xd7, 0xbf,
	0x85, 0xa6, 0xe3, 0x63, 0x42, 0xc3, 0x89, 0x43, 0xfd, 0x90, 0xef, 0xbc, 0xd4, 0x59, 0xdb, 0x95,
	0x79, 0xd9, 0xed, 0xf7, 0xba, 0xb1, 0xd4, 0x54, 0x55, 0xf5, 0x97, 0x50, 0x19, 0xd8, 0xd4, 0xee,
	0x70, 0x28, 0xcd, 0xce, 0xce, 0xcc, 0xa6, 0x20, 0x48, 0x53, 0xa8, 0x1b, 0xbf, 0x82, 0x07, 0xfd,
	0x9e, 0x45, 0x54, 0xa5, 0x6e, 0x88, 0x6c, 0x8a, 0x06, 0x37, 0x76, 0x79, 0x0c, 0x6b, 0x19, 0x97,
	0x9e, 0x4f, 0x6e, 0xe1, 0xf1, 0x5f, 0x1a, 0xdc, 0x37, 0xed, 0xf7, 0x47, 0x88, 0x10, 0x7b, 0x88,
	0x98, 0x44, 0x14, 0x6a, 0x05, 0x2a, 0x84, 0xda, 0x14, 0xf1, 0x44, 0x55, 0x4c, 0xf1, 0xc0, 0x12,
	0x1f, 0x22, 0x62, 0x09, 0x49, 0x49, 0x24, 0x3e, 0x44, 0xe4, 0x84, 0x0b, 0xb3, 0xb5, 0x2b, 0xe7,
	0xd4, 0xee, 0x4b, 0x28, 0x3b, 0xf4, 0xc3, 0xfa, 0x1d, 0x0e, 0x73, 0x63, 0x06, 0xf3, 0xad, 0x8d,
	0x07, 0x64, 0x64, 0x5f, 0xa0, 0xae, 0x8f, 0x29, 0xfa, 0x40, 0x4d, 0xa6, 0x95, 0x6e, 0x97, 0x4a,
	0xba, 0x5d, 0x36, 0xa1, 0x71, 0x39, 0x71, 0x9d, 0x0b, 0xcb, 0x76, 0x2e, 0xd6, 0xab, 0x02, 0x0f,
	0x5f, 0xd8, 0x77, 0x2e, 0x92, 0x5d, 0x52, 0x4b, 0x75, 0xc9, 0xef, 0x61, 0x29, 0x19, 0xf6, 0x2d,
	0x1a, 0xa4, 0x93, 0xcc, 0xfd, 0xd6, 0xcc, 0x26, 0x27, 0xb1, 0x51, 0xde, 0xdf, 0xc0, 0x72, 0xbf,
	0x67, 0x8d, 0xa2, 0xa8, 0x39, 0x82, 0x9b, 0xf8, 0x79, 0x07, 0xab, 0x71, 0x47, 0xa8, 0xe1, 0xdc,
	0xc4, 0x59, 0x1b, 0xe0, 0x10, 0xd3, 0x97, 0x2f, 0x44, 0x0b, 0xb4, 0x40, 0xbb, 0x92, 0x27, 0x54,
	0xbb, 0x32, 0x3c, 0xa8, 0x70, 0xd9, 0x2d, 0xf2, 0xf4, 0x45, 0x12, 0xd2, 0xfd, 0x99, 0x4d, 0xbc,
	0x69, 0x84, 0xe4, 0x05, 0xd4, 0xfa, 0x3d, 0xcb, 0xf3, 0xf1, 0xf0, 0x53, 0xac, 0x36, 0xa1, 0x79,
	0x42, 0x43, 0x17, 0x0f, 0x53, 0x01, 0x34, 0x58, 0x00, 0x18, 0xaa, 0x42, 0x78, 0x8b, 0x08, 0x9e,
	0x25, 0xb1, 0xac, 0xc4, 0xa7, 0x2c, 0xde, 0x36, 0x02, 0xf3, 0x0d, 0x34, 0x58, 0x65, 0xc4, 0x96,
	0x9f, 0x62, 0xf8, 0x1c, 0xee, 0x99, 0x27, 0xfb, 0xc7, 0x93, 0x33, 0xcf, 0x75, 0xde, 0xa1, 0xe9,
	0x2c, 0x16, 0x1c, 0xc5, 0x82, 0xd9, 0x93, 0x38, 0x7f, 0x0d, 0x53, 0x43, 0xc6, 0x77, 0xd0, 0x52,
	0x0d, 0x6e, 0x11, 0xdf, 0x57, 0x49, 0x98, 0xed, 0xb8, 0x69, 0xd2, 0x80, 0x22, 0xb0, 0xaf, 0xe1,
	0x5e, 0xbf, 0x67, 0x85, 0xc4, 0xb6, 0x02, 0x2e, 0x67, 0x47, 0xf5, 0x06, 0x6e, 0xfe, 0xa9, 0xc1,
	0x6a, 0x7a, 0x04, 0xcc, 0x06, 0x11, 0xf6, 0xb1, 0x23, 0x06, 0x51, 0xcb, 0x14, 0x0f, 0xfa, 0xff,
	0x41, 0x8b, 0xbd, 0xe3, 0x50, 0x68, 0x09, 0x61, 0x89, 0x0b, 0x9b, 0x62, 0xed, 0x17, 0x5c, 0x65,
	0x13, 0x1a, 0x18, 0xbd, 0x97, 0xf2, 0x32, 0x97, 0xd7, 0x31, 0x7a, 0x2f, 0x84, 0x2d, 0xd0, 0x6c,
	0x3e, 0x83, 0x5a, 0xa6, 0xc6, 0x93, 0x1b, 0xf0, 0xe1, 0xd2, 0x32, 0xb5, 0x20, 0x3d, 0x74, 0xaa,
	0xe9, 0xa1, 0xb3, 0x01, 0xf5, 0x48, 0xce, 0xc7, 0x4a, 0xcb, 0xac, 0x49, 0xa1, 0xf1, 0x07, 0x0d,
	0x96, 0xd3, 0x61, 0xdc, 0xa2, 0x1c, 0x2f, 0x92, 0x79, 0xdc, 0x2e, 0x9c, 0x96, 0xa9, 0x91, 0x70,
	0x5f, 0x1d, 0x2d, 0x11, 0x8c, 0x9b, 0x39, 0x13, 0x23, 0x61, 0xaf, 0x93, 0x3a, 0x51, 0x95, 0x78,
	0x24, 0xec, 0x75, 0xfe, 0x47, 0x23, 0x41, 0x6e, 0x1a, 0x21, 0xf9, 0x1a, 0xea, 0xfd, 0x9e, 0xe5,
	0xf2, 0x0d, 0x3f, 0xc1, 0xec, 0x8f, 0x1a, 0x2c, 0xef, 0xcb, 0xda, 0xe1, 0x73, 0xff, 0xe3, 0x68,
	0x88, 0x5a, 0xe2, 0x52, 0xa2, 0xc4, 0xfa, 0x0b, 0x68, 0x9e, 0x4f, 0xe8, 0x24, 0x44, 0x16, 0xb1,
	0x3d, 0xca, 0x1b, 0x4b, 0x05, 0xf0, 0x86, 0xcb, 0x4e, 0x6c, 0x8f, 0x9a, 0x70, 0x3e, 0xfb, 0x6f,
	0x7c, 0x80, 0xa6, 0x02, 0xe2, 0x16, 0x09, 0x7b, 0x9e, 0x8c, 0x3c, 0x7e, 0x81, 0xa6, 0x63, 0x8c,
	0xe2, 0xdf, 0x87, 0xa5, 0x7e, 0xcf, 0xb2, 0x95, 0xcd, 0x3f, 0xd9, 0xc5, 0x3f, 0x4a, 0xa0, 0x0b,
	0xfe, 0x20, 0xc9, 0xc4, 0xc7, 0x25, 0x71, 0x09, 0x4a, 0x6e, 0x20, 0xa7, 0x54, 0xc9, 0x0d, 0xd8,
	0x49, 0xf6, 0xec, 0x29, 0x0a, 0x25, 0x63, 0x13, 0x0f, 0xfa, 0x2a, 0x54, 0xed, 0xc0, 0x65, 0x0e,
	0xee, 0x88, 0x65, 0x3b, 0x70, 0x0f, 0x07, 0xec, 0x80, 0x0f, 0x10, 0xe3, 0xb0, 0xd6, 0xd8, 0x1f,
	0x20, 0x8f, 0x9f, 0xce, 0x86, 0xd9, 0x14, 0x6b, 0x47, 0x6c, 0x49, 0x7f, 0x02, 0x4b, 0x64, 0x4a,
	0x28, 0x1a, 0x5b, 0x57, 0x28, 0x64, 0xb0, 0xf8, 0x51, 0x6d, 0x98, 0x8b, 0x62, 0xf5, 0xd7, 0x62,
	0x51, 0x7f, 0x04, 0x4d, 0x3b, 0x08, 0x66, 0x3a, 0x35, 0xae, 0x03, 0x76, 0x10, 0x44, 0x0a, 0x4f,
	0x61, 0x59, 0xfa, 0xf1, 0x6c, 0x3c, 0xb4, 0x1c, 0x7f, 0x80, 0xd6, 0xeb, 0x5c, 0x4b, 0xfa, 0xef,
	0xd9, 0x78, 0xd8, 0xf5, 0x07, 0x7c, 0xa4, 0x70, 0x95, 0x80, 0xd1, 0x8d, 0x06, 0x57, 0xa9, 0xb3,
	0x85, 0x63, 0x5b, 0xd0, 0x8d, 0xd8, 0x1e, 0x62, 0x21, 0xb3, 0x34, 0xbe, 0x87, 0xc5, 0x44, 0x06,
	0x6f, 0xd1, 0x01, 0x3f, 0x4b, 0x96, 0x6f, 0x73, 0x66, 0x93, 0x2d, 0x51, 0x54, 0xc0, 0x43, 0x58,
	0xe9, 0xf7, 0x2c, 0x47, 0x95, 0xf3, 0x4e, 0xb8, 0x81, 0x2b, 0x07, 0x56, 0x4e, 0xf8, 0x90, 0x65,
	0x74, 0x0e, 0x39, 0x14, 0x0d, 0x44, 0x33, 0x3c, 0x83, 0x7b, 0x92, 0x84, 0x58, 0x72, 0x30, 0xcb,
	0x96, 0xa8, 0x98, 0x77, 0xa5, 0x40, 0xd8, 0x1d, 0x0e, 0x58, 0x45, 0xa2, 0xe1, 0x6d, 0x8f, 0xa3,
	0xf7, 0x18, 0xc8, 0xd9, 0x6d, 0x8f, 0x91, 0xf1, 0x83, 0x06, 0x77, 0x53, 0xbb, 0xdc, 0x22, 0x61,
	0x7b, 0xc9, 0x28, 0x1f, 0x2a, 0xd4, 0x38, 0x1b, 0x48, 0x14, 0xe7, 0x29, 0x6c, 0xf7, 0x7b, 0x56,
	0x30, 0x21, 0x23, 0x2b, 0x01, 0x3f, 0x06, 0x74, 0x23, 0xb7, 0x27, 0xf0, 0x28, 0xa6, 0x6b, 0x16,
	0x41, 0xb4, 0x9b, 0x29, 0xca, 0x57, 0x50, 0x93, 0x72, 0x1e, 0x64, 0x53, 0x09, 0x32, 0xa1, 0x6c,
	0x46, 0x6a, 0xc6, 0x37, 0xb0, 0xa5, 0x38, 0x1d, 0x22, 0xca, 0x0e, 0xb2, 0x1f, 0xba, 0xdf, 0xd9,
	0xd4, 0xf5, 0x31, 0xd1, 0x1f, 0x40, 0x6d, 0x42, 0xd4, 0x8a, 0x54, 0xd9, 0xe3, 0xe1, 0xc0, 0xe8,
	0xc1, 0x43, 0xc5, 0x30, 0x44, 0x24, 0x65, 0x5a, 0x68, 0xa9, 0xeb, 0x70, 0x67, 0x64, 0x93, 0x91,
	0xbc, 0x9d, 0xf1, 0xff, 0xc6, 0xd7, 0xfc, 0xbd, 0xa3, 0xc0, 0xe8, 0xf1, 0x03, 0x3e, 0x67, 0x4c,
	0x18, 0xdf, 0xaa, 0x77, 0x1a, 0x61, 0x26, 0x8f, 0xdb, 0x3c, 0xcb, 0x97, 0xbc, 0xad, 0x15, 0xcb,
	0x53, 0x01, 0x6e, 0x9e, 0xdd, 0x11, 0x6c, 0x24, 0xed, 0xe2, 0xa1, 0x4d, 0xe6, 0x4e, 0xb5, 0x65,
	0x28, 0xe3, 0xc9, 0x58, 0x5e, 0x7e, 0xd8, 0x5f, 0xe3, 0xe7, 0xea, 0x3d, 0xcf, 0xba, 0x9c, 0xa0,
	0x70, 0x2a, 0x27, 0xe9, 0x5c, 0x24, 0x6f, 0x55, 0xf6, 0x6e, 0xc9, 0xf4, 0x33, 0xc3, 0xe7, 0xca,
	0x0b, 0x48, 0x4b, 0x51, 0x46, 0x65, 0x4c, 0xc7, 0xcc, 0xe3, 0x14, 0xda, 0x8a, 0xa7, 0x33, 0x17,
	0x0f, 0xa4, 0x1a, 0xcb, 0xc9, 0xdc, 0xa0, 0x94, 0x3a, 0x97, 0x12, 0x1d, 0xf2, 0x9b, 0x44, 0x6b,
	0x4d, 0xf0, 0x4f, 0xe6, 0xf8, 0xaf, 0x9a, 0xe8, 0x96, 0x29, 0x76, 0xf8, 0xcf, 0x69, 0x30, 0xb0,
	0x29, 0x22, 0x85, 0x06, 0xe9, 0x9d, 0xca, 0x39, 0x57, 0xc1, 0x78, 0xf0, 0x88, 0x57, 0x49, 0x9d,
	0x44, 0x13, 0xe7, 0x19, 0xd4, 0x26, 0x62, 0x03, 0xfe, 0x22, 0x69, 0x76, 0x96, 0x67, 0xd9, 0x94,
	0x1b, 0x9b, 0x91, 0x82, 0xf1, 0xbb, 0x18, 0x18, 0x3b, 0xfe, 0x39, 0xc0, 0x92, 0x47, 0x41, 0xf1,
	0x5d, 0x9a, 0xe7, 0xfb, 0xef, 0x9a, 0x28, 0x53, 0x14, 0x75, 0x77, 0x64, 0x63, 0x8c, 0xbc, 0x68,
	0x8f, 0x87, 0x00, 0x8e, 0x58, 0x89, 0xe3, 0x6f, 0xc8, 0x95, 0x64, 0x32, 0xcb, 0xd7, 0xe5, 0xe6,
	0xce, 0xb5, 0xb9, 0xa9, 0x14, 0xe7, 0xa6, 0x3a, 0x0f, 0xff, 0x0f, 0x0a, 0x7e, 0x96, 0x9c, 0x6b,
	0xf1, 0x6b, 0xd7, 0xe0, 0x2f, 0x15, 0xa5, 0xb0, 0x3c, 0x0f, 0xc2, 0x9f, 0x35, 0x71, 0x66, 0x22,
	0x08, 0x66, 0xe0, 0x98, 0x88, 0x4c, 0x3c, 0x9a, 0x8c, 0x52, 0x4b, 0x45, 0x99, 0x4a, 0x51, 0x29,
	0x9d, 0xa2, 0x2d, 0x80, 0x10, 0x5d, 0x5a, 0x63, 0x32, 0x8c, 0xbb, 0xab, 0x1e, 0xa2, 0xcb, 0x23,
	0x32, 0x3c, 0x1c, 0xe8, 0x6b, 0x50, 0x0d, 0xf9, 0x26, 0xf2, 0xce, 0x20, 0x9f, 0x8c, 0x77, 0xfc,
	0x16, 0xcf, 0xb1, 0x0c, 0x11, 0x15, 0x9f, 0x41, 0x6e, 0x7c, 0x24, 0xfe, 0xa6, 0x44, 0x36, 0x44,
	0xf4, 0x95, 0x7b, 0x7e, 0x8e, 0x42, 0xc4, 0x6e, 0x2b, 0xf3, 0xc0, 0x17, 0x36, 0xc6, 0x32, 0x94,
	0x03, 0x4a, 0xe4, 0x71, 0x60, 0x7f, 0xf5, 0xcf, 0xe1, 0x6e, 0x40, 0x89, 0x45, 0x7d, 0x6a, 0x7b,
	0x96, 0xe7, 0x8e, 0x5d, 0x2a, 0x1b, 0x62, 0x31, 0xa0, 0xa4, 0xcf, 0x56, 0x7b, 0x6c, 0x91, 0x0d,
	0x78, 0x96, 0x6f, 0xf9, 0x51, 0x85, 0xff, 0x67, 0xde, 0x2e, 0x29, 0x91, 0x9f, 0x52, 0xd8, 0x5f,
	0xe3, 0x3f, 0x9a, 0x98, 0x0f, 0x12, 0xb2, 0x6c, 0x87, 0x9f, 0x02, 0xf9, 0x0a, 0x54, 0xce, 0xfd,
	0xd0, 0x41, 0x1c, 0x7b, 0xdd, 0x14, 0x0f, 0xfa, 0x73, 0xa8, 0xc9, 0x76, 0x92, 0xe7, 0x78, 0x55,
	0x61, 0xfe, 0xc1, 0x24, 0x02, 0x60, 0x46, 0x5a, 0xfa, 0x4b, 0xa8, 0x9e, 0xbb, 0x1e, 0x45, 0xa1,
	0xec, 0xed, 0xf8, 0xd6, 0x23, 0x55, 0xe5, 0xa7, 0x10, 0xf2, 0x86, 0x6b, 0x99, 0x52, 0x3b, 0x4a,
	0x5c, 0x2d, 0x4e, 0x1c, 0x63, 0xaf, 0x3c, 0x5d, 0x75, 0xc9, 0x5e, 0xd9, 0x83, 0xf1, 0x26, 0xa6,
	0x09, 0x8e, 0x78, 0xe1, 0xf7, 0xfd, 0x13, 0x95, 0x2f, 0xe8, 0x9f, 0x31, 0x96, 0xca, 0x8e, 0x7b,
	0xaa, 0x35, 0x5b, 0x6c, 0x35, 0xa2, 0x44, 0xf2, 0x1d, 0xc2, 0xfd, 0x28, 0x43, 0xe7, 0x63, 0x68,
	0xb6, 0x71, 0xce, 0xdf, 0x66, 0x33, 0xd3, 0xd9, 0x79, 0xf8, 0x28, 0x8e, 0xfe, 0x05, 0xdc, 0x93,
	0xdf, 0xec, 0x94, 0xee, 0x17, 0x55, 0x92, 0x1f, 0xf3, 0x4c, 0x79, 0x06, 0x8c, 0x1f, 0x45, 0x7b,
	0x9e, 0xf9, 0xd4, 0x42, 0x1f, 0x90, 0x33, 0xa1, 0xa8, 0xeb, 0x8f, 0xc7, 0x36, 0x1e, 0x30, 0x0a,
	0xcf, 0x56, 0x67, 0xa1, 0x55, 0xce, 0x7c, 0x2a, 0xa6, 0x4e, 0x80, 0x50, 0x28, 0xbe, 0xbf, 0xc9,
	0x8f, 0x85, 0x6c, 0xa1, 0x3f, 0x0d, 0x10, 0x2b, 0x3c, 0x17, 0xc6, 0x85, 0x67, 0x8f, 0x82, 0xf8,
	0x3b, 0xc2, 0xaf, 0xe5, 0xb9, 0x58, 0xd4, 0xbf, 0xc1, 0x08, 0x1d, 0x5f, 0xeb, 0xb9, 0x18, 0x75,
	0x4c, 0xa8, 0x9a, 0xc7, 0xdd, 0x03, 0x9f, 0xea, 0x6f, 0x41, 0xcf, 0xc1, 0xb3, 0xad, 0xb0, 0xc2,
	0x1c, 0xbc, 0xed, 0x78, 0xba, 0xc8, 0xea, 0x1b, 0x0b, 0x9d, 0xbf, 0xd4, 0x00, 0xcc, 0xe3, 0x6e,
	0x44, 0xcf, 0x7f, 0x0b, 0x5b, 0xd7, 0x92, 0xb4, 0xa7, 0xea, 0x16, 0xd7, 0x69, 0xb6, 0x17, 0x67,
	0x9a, 0x07, 0xbe, 0xef, 0x19, 0x0b, 0x3a, 0x82, 0x8d, 0x62, 0xaa, 0xf6, 0x24, 0xcf, 0x6f, 0x46,
	0xad, 0xfd, 0x68, 0xa6, 0x66, 0x3b, 0x8e, 0x3f, 0xc1, 0xd4, 0x4a, 0x2a, 0x18, 0x0b, 0xfa, 0x29,
	0xb4, 0xaf, 0x21, 0x76, 0x9f, 0xe7, 0xed, 0x93, 0xd5, 0xcb, 0xa2, 0x3f, 0x80, 0xe5, 0x0c, 0xc3,
	0xdb, 0x2a, 0x00, 0xcd, 0xa5, 0xed, 0xa5, 0xe4, 0xe5, 0xdc, 0x58, 0xd0, 0x0f, 0xe1, 0x7e, 0x1e,
	0xdd, 0x7b, 0x54, 0xe8, 0x46, 0x28, 0xb4, 0xef, 0xa6, 0xbe, 0x9a, 0x19, 0x0b, 0xfa, 0xab, 0xf8,
	0xda, 0x11, 0xf3, 0xbf, 0x87, 0x05, 0x8e, 0x84, 0x38, 0x07, 0x50, 0x1f, 0xd6, 0x0a, 0xd8, 0xa0,
	0x51, 0xe0, 0x4a, 0xd1, 0x69, 0xaf, 0xe4, 0x5c, 0xfe, 0x59, 0x05, 0x8e, 0x61, 0x25, 0x97, 0x14,
	0xee, 0xe4, 0xf9, 0x54, 0x35, 0xda, 0xb9, 0x5c, 0xcf, 0x58, 0xd0, 0x5f, 0x83, 0x9e, 0xc3, 0x15,
	0xb7, 0x0b, 0x7a, 0x31, 0xf2, 0x96, 0xa9, 0xe1, 0x2f, 0xe1, 0x41, 0x11, 0x51, 0x7c, 0x9c, 0xe7,
	0x2b, 0xa5, 0x94, 0x75, 0x78, 0x12, 0xb7, 0x74, 0x96, 0x22, 0xe6, 0xb6, 0x74, 0x46, 0x2d, 0xe3,
	0xb4, 0xf3, 0xef, 0x3b, 0x50, 0x63, 0x27, 0x72, 0x8a, 0x1d, 0x7d, 0x9f, 0x5d, 0xd1, 0x53, 0x4c,
	0x31, 0xd9, 0x75, 0x29, 0x69, 0x16, 0x63, 0xe4, 0x42, 0xe5, 0x74, 0x59, 0x17, 0x8a, 0x34, 0x3f,
	0x6f, 0x05, 0xcc, 0xed, 0x71, 0x2e, 0x98, 0xa4, 0x52, 0xb1, 0xc3, 0x1c, 0x2a, 0xf5, 0x38, 0x17,
	0xda, 0x3c, 0x87, 0xac, 0x41, 0xb2, 0xc4, 0x68, 0x3b, 0xd7, 0xd7, 0x4c, 0x9e, 0x75, 0xf3, 0x0a,
	0x16, 0x93, 0x9c, 0x66, 0x23, 0xe3, 0x21, 0x12, 0xb5, 0xe3, 0xdb, 0xa9, 0x64, 0x68, 0x16, 0x5f,
	0xe7, 0x5d, 0xa1, 0xe7, 0x71, 0x99, 0x3c, 0x57, 0xb1, 0xbc, 0xbd, 0x99, 0xf1, 0x17, 0x0b, 0x8d,
	0x05, 0x7d, 0x04, 0x1b, 0xc5, 0x6c, 0xe3, 0x49, 0x9e, 0xef, 0x8c, 0x5a, 0xdb, 0xc8, 0x6c, 0x91,
	0xd1, 0x31, 0x16, 0x3a, 0x3f, 0x96, 0x78, 0xff, 0x1d, 0x4f, 0xc8, 0x48, 0x3f, 0x83, 0xcd, 0xeb,
	0xde, 0xf1, 0xff, 0xaf, 0xee, 0x7b, 0x8d, 0x62, 0x7b, 0xbd, 0xe8, 0x23, 0x01, 0x9f, 0x8a, 0x2b,
	0xb9, 0xef, 0xff, 0x9d, 0x8c, 0xf3, 0x94, 0x46, 0xb6, 0x7e, 0x47, 0xb0, 0x56, 0xc0, 0x07, 0x8c,
	0x5c, 0x67, 0x09, 0x9d, 0x8c, 0xbb, 0x83, 0x2f, 0x61, 0xdb, 0x19, 0xd9, 0x74, 0x17, 0xa3, 0xb3,
	0x89, 0x67, 0xef, 0xb2, 0xff, 0x08, 0x0f, 0x5d, 0x8c, 0x22, 0xc5, 0x83, 0xda, 0x51, 0xff, 0x98,
	0xfd, 0x79, 0x5b, 0x3a, 0xab, 0xf2, 0x95, 0xbd, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x9f,
	0x6e, 0xc7, 0x84, 0x1e, 0x00, 0x00,
}
