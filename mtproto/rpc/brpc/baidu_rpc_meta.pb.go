// Code generated by protoc-gen-go. DO NOT EDIT.
// source: baidu_rpc_meta.proto

package brpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RpcMeta struct {
	Request              *RpcRequestMeta  `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
	Response             *RpcResponseMeta `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
	CompressType         *int32           `protobuf:"varint,3,opt,name=compress_type,json=compressType" json:"compress_type,omitempty"`
	CorrelationId        *int64           `protobuf:"varint,4,opt,name=correlation_id,json=correlationId" json:"correlation_id,omitempty"`
	AttachmentSize       *int32           `protobuf:"varint,5,opt,name=attachment_size,json=attachmentSize" json:"attachment_size,omitempty"`
	ChunkInfo            *ChunkInfo       `protobuf:"bytes,6,opt,name=chunk_info,json=chunkInfo" json:"chunk_info,omitempty"`
	AuthenticationData   []byte           `protobuf:"bytes,7,opt,name=authentication_data,json=authenticationData" json:"authentication_data,omitempty"`
	StreamSettings       *StreamSettings  `protobuf:"bytes,8,opt,name=stream_settings,json=streamSettings" json:"stream_settings,omitempty"`
	MtprotoMeta          *MTProtoMeta     `protobuf:"bytes,9,opt,name=mtproto_meta,json=mtprotoMeta" json:"mtproto_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RpcMeta) Reset()         { *m = RpcMeta{} }
func (m *RpcMeta) String() string { return proto.CompactTextString(m) }
func (*RpcMeta) ProtoMessage()    {}
func (*RpcMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_baidu_rpc_meta_07df12ed81f8f6fb, []int{0}
}
func (m *RpcMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcMeta.Unmarshal(m, b)
}
func (m *RpcMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcMeta.Marshal(b, m, deterministic)
}
func (dst *RpcMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcMeta.Merge(dst, src)
}
func (m *RpcMeta) XXX_Size() int {
	return xxx_messageInfo_RpcMeta.Size(m)
}
func (m *RpcMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcMeta.DiscardUnknown(m)
}

var xxx_messageInfo_RpcMeta proto.InternalMessageInfo

func (m *RpcMeta) GetRequest() *RpcRequestMeta {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *RpcMeta) GetResponse() *RpcResponseMeta {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *RpcMeta) GetCompressType() int32 {
	if m != nil && m.CompressType != nil {
		return *m.CompressType
	}
	return 0
}

func (m *RpcMeta) GetCorrelationId() int64 {
	if m != nil && m.CorrelationId != nil {
		return *m.CorrelationId
	}
	return 0
}

func (m *RpcMeta) GetAttachmentSize() int32 {
	if m != nil && m.AttachmentSize != nil {
		return *m.AttachmentSize
	}
	return 0
}

func (m *RpcMeta) GetChunkInfo() *ChunkInfo {
	if m != nil {
		return m.ChunkInfo
	}
	return nil
}

func (m *RpcMeta) GetAuthenticationData() []byte {
	if m != nil {
		return m.AuthenticationData
	}
	return nil
}

func (m *RpcMeta) GetStreamSettings() *StreamSettings {
	if m != nil {
		return m.StreamSettings
	}
	return nil
}

func (m *RpcMeta) GetMtprotoMeta() *MTProtoMeta {
	if m != nil {
		return m.MtprotoMeta
	}
	return nil
}

type RpcRequestMeta struct {
	ServiceName          *string  `protobuf:"bytes,1,req,name=service_name,json=serviceName" json:"service_name,omitempty"`
	MethodName           *string  `protobuf:"bytes,2,req,name=method_name,json=methodName" json:"method_name,omitempty"`
	LogId                *int64   `protobuf:"varint,3,opt,name=log_id,json=logId" json:"log_id,omitempty"`
	TraceId              *int64   `protobuf:"varint,4,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	SpanId               *int64   `protobuf:"varint,5,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	ParentSpanId         *int64   `protobuf:"varint,6,opt,name=parent_span_id,json=parentSpanId" json:"parent_span_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcRequestMeta) Reset()         { *m = RpcRequestMeta{} }
func (m *RpcRequestMeta) String() string { return proto.CompactTextString(m) }
func (*RpcRequestMeta) ProtoMessage()    {}
func (*RpcRequestMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_baidu_rpc_meta_07df12ed81f8f6fb, []int{1}
}
func (m *RpcRequestMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcRequestMeta.Unmarshal(m, b)
}
func (m *RpcRequestMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcRequestMeta.Marshal(b, m, deterministic)
}
func (dst *RpcRequestMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcRequestMeta.Merge(dst, src)
}
func (m *RpcRequestMeta) XXX_Size() int {
	return xxx_messageInfo_RpcRequestMeta.Size(m)
}
func (m *RpcRequestMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcRequestMeta.DiscardUnknown(m)
}

var xxx_messageInfo_RpcRequestMeta proto.InternalMessageInfo

func (m *RpcRequestMeta) GetServiceName() string {
	if m != nil && m.ServiceName != nil {
		return *m.ServiceName
	}
	return ""
}

func (m *RpcRequestMeta) GetMethodName() string {
	if m != nil && m.MethodName != nil {
		return *m.MethodName
	}
	return ""
}

func (m *RpcRequestMeta) GetLogId() int64 {
	if m != nil && m.LogId != nil {
		return *m.LogId
	}
	return 0
}

func (m *RpcRequestMeta) GetTraceId() int64 {
	if m != nil && m.TraceId != nil {
		return *m.TraceId
	}
	return 0
}

func (m *RpcRequestMeta) GetSpanId() int64 {
	if m != nil && m.SpanId != nil {
		return *m.SpanId
	}
	return 0
}

func (m *RpcRequestMeta) GetParentSpanId() int64 {
	if m != nil && m.ParentSpanId != nil {
		return *m.ParentSpanId
	}
	return 0
}

type RpcResponseMeta struct {
	ErrorCode            *int32   `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorText            *string  `protobuf:"bytes,2,opt,name=error_text,json=errorText" json:"error_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcResponseMeta) Reset()         { *m = RpcResponseMeta{} }
func (m *RpcResponseMeta) String() string { return proto.CompactTextString(m) }
func (*RpcResponseMeta) ProtoMessage()    {}
func (*RpcResponseMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_baidu_rpc_meta_07df12ed81f8f6fb, []int{2}
}
func (m *RpcResponseMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcResponseMeta.Unmarshal(m, b)
}
func (m *RpcResponseMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcResponseMeta.Marshal(b, m, deterministic)
}
func (dst *RpcResponseMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcResponseMeta.Merge(dst, src)
}
func (m *RpcResponseMeta) XXX_Size() int {
	return xxx_messageInfo_RpcResponseMeta.Size(m)
}
func (m *RpcResponseMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcResponseMeta.DiscardUnknown(m)
}

var xxx_messageInfo_RpcResponseMeta proto.InternalMessageInfo

func (m *RpcResponseMeta) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *RpcResponseMeta) GetErrorText() string {
	if m != nil && m.ErrorText != nil {
		return *m.ErrorText
	}
	return ""
}

func init() {
	proto.RegisterType((*RpcMeta)(nil), "brpc.RpcMeta")
	proto.RegisterType((*RpcRequestMeta)(nil), "brpc.RpcRequestMeta")
	proto.RegisterType((*RpcResponseMeta)(nil), "brpc.RpcResponseMeta")
}

func init() {
	proto.RegisterFile("baidu_rpc_meta.proto", fileDescriptor_baidu_rpc_meta_07df12ed81f8f6fb)
}

var fileDescriptor_baidu_rpc_meta_07df12ed81f8f6fb = []byte{
	// 496 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x93, 0xcf, 0x6e, 0x13, 0x31,
	0x10, 0xc6, 0xb5, 0x49, 0xf3, 0x6f, 0xf2, 0x4f, 0x98, 0x56, 0x98, 0x48, 0x88, 0x25, 0x80, 0xc8,
	0x29, 0x08, 0xc4, 0x95, 0x4b, 0xca, 0x25, 0x87, 0x02, 0x72, 0x72, 0x5f, 0xb9, 0xde, 0x69, 0x62,
	0x91, 0x5d, 0x1b, 0x7b, 0x82, 0x9a, 0xbe, 0x18, 0x4f, 0xc0, 0x7b, 0xa1, 0xb5, 0x93, 0x26, 0xe9,
	0xcd, 0xf3, 0xfb, 0xbe, 0xd9, 0xf5, 0x7e, 0x33, 0x0b, 0x97, 0xb7, 0x52, 0xe7, 0xdb, 0xcc, 0x59,
	0x95, 0x15, 0x48, 0x72, 0x6a, 0x9d, 0x21, 0xc3, 0x2e, 0x6e, 0x9d, 0x55, 0xa3, 0xbe, 0xb1, 0xa4,
	0x4d, 0xe9, 0x23, 0x1c, 0x71, 0x4f, 0x0e, 0x65, 0xa1, 0xcb, 0xd5, 0x13, 0xfb, 0x88, 0x15, 0x14,
	0x0e, 0x27, 0x6c, 0xfc, 0xb7, 0x0e, 0x2d, 0x61, 0xd5, 0x0d, 0x92, 0x64, 0x53, 0x68, 0x39, 0xfc,
	0xbd, 0x45, 0x4f, 0x3c, 0x49, 0x93, 0x49, 0xf7, 0xf3, 0xe5, 0xb4, 0x7a, 0xc1, 0x54, 0x58, 0x25,
	0x22, 0xaf, 0x6c, 0xe2, 0x60, 0x62, 0x9f, 0xa0, 0xed, 0xd0, 0x5b, 0x53, 0x7a, 0xe4, 0xb5, 0xd0,
	0x70, 0x75, 0xd2, 0x10, 0x85, 0xd0, 0xf1, 0x68, 0x63, 0x6f, 0xa1, 0xaf, 0x4c, 0x61, 0x1d, 0x7a,
	0x9f, 0xd1, 0xce, 0x22, 0xaf, 0xa7, 0xc9, 0xa4, 0x21, 0x7a, 0x07, 0xb8, 0xdc, 0x59, 0x64, 0xef,
	0x61, 0xa0, 0x8c, 0x73, 0xb8, 0x91, 0xd5, 0x77, 0x65, 0x3a, 0xe7, 0x17, 0x69, 0x32, 0xa9, 0x8b,
	0xfe, 0x09, 0x9d, 0xe7, 0xec, 0x03, 0x0c, 0x25, 0x91, 0x54, 0xeb, 0x02, 0x4b, 0xca, 0xbc, 0x7e,
	0x40, 0xde, 0x08, 0x4f, 0x1b, 0x1c, 0xf1, 0x42, 0x3f, 0x20, 0x9b, 0x02, 0xa8, 0xf5, 0xb6, 0xfc,
	0x95, 0xe9, 0xf2, 0xce, 0xf0, 0x66, 0xb8, 0xe9, 0x30, 0xde, 0xf4, 0xba, 0xe2, 0xf3, 0xf2, 0xce,
	0x88, 0x8e, 0x3a, 0x1c, 0xd9, 0x47, 0x78, 0x2e, 0xb7, 0xb4, 0xc6, 0x92, 0xb4, 0x8a, 0x57, 0xc8,
	0x25, 0x49, 0xde, 0x4a, 0x93, 0x49, 0x4f, 0xb0, 0x73, 0xe9, 0x9b, 0x24, 0xc9, 0xbe, 0xc2, 0x30,
	0x86, 0x9e, 0x79, 0x24, 0xd2, 0xe5, 0xca, 0xf3, 0xf6, 0x69, 0x80, 0x8b, 0x20, 0x2e, 0xf6, 0x9a,
	0x18, 0xf8, 0xb3, 0x9a, 0x7d, 0x81, 0xde, 0xe9, 0x64, 0x78, 0x27, 0xf4, 0x3e, 0x8b, 0xbd, 0x37,
	0xcb, 0x9f, 0x95, 0x12, 0x72, 0xec, 0xee, 0x6d, 0x55, 0x31, 0xfe, 0x97, 0xc0, 0xe0, 0x7c, 0x32,
	0xec, 0x0d, 0xf4, 0x3c, 0xba, 0x3f, 0x5a, 0x61, 0x56, 0xca, 0x02, 0x79, 0x92, 0xd6, 0x26, 0x1d,
	0xd1, 0xdd, 0xb3, 0xef, 0xb2, 0x40, 0xf6, 0x1a, 0xba, 0x05, 0xd2, 0xda, 0xe4, 0xd1, 0x51, 0x0b,
	0x0e, 0x88, 0x28, 0x18, 0xae, 0xa0, 0xb9, 0x31, 0xab, 0x2a, 0xf4, 0x7a, 0x08, 0xbd, 0xb1, 0x31,
	0xab, 0x79, 0xce, 0x5e, 0x42, 0x9b, 0x9c, 0x54, 0x78, 0x9c, 0x46, 0x2b, 0xd4, 0xf3, 0x9c, 0xbd,
	0x80, 0x96, 0xb7, 0x32, 0xcc, 0xa9, 0x11, 0x94, 0x66, 0x55, 0xce, 0x73, 0xf6, 0x0e, 0x06, 0x56,
	0xba, 0x30, 0x9c, 0xbd, 0xde, 0x0c, 0x7a, 0x2f, 0xd2, 0x45, 0x70, 0x8d, 0x7f, 0xc0, 0xf0, 0xc9,
	0xbe, 0xb0, 0x57, 0x00, 0xe8, 0x9c, 0x71, 0x99, 0x32, 0x39, 0x86, 0x5d, 0x6c, 0x88, 0x4e, 0x20,
	0xd7, 0x26, 0xc7, 0xa3, 0x4c, 0x78, 0x4f, 0x61, 0xf3, 0x3a, 0x7b, 0x79, 0x89, 0xf7, 0x34, 0x4b,
	0x61, 0xa8, 0x4c, 0x11, 0xd3, 0xb3, 0x66, 0xa3, 0xd5, 0x6e, 0xd6, 0x9f, 0x55, 0xbf, 0x8f, 0xb0,
	0x2a, 0x64, 0xf9, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x86, 0x6d, 0xdc, 0x4e, 0x03, 0x00, 0x00,
}
