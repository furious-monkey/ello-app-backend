// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gif.tl.proto

package gif

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	mtproto "github.com/teamgram/proto/mtproto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TLConstructor int32

const (
	CRC32_UNKNOWN            TLConstructor = 0
	CRC32_gif_saveGif        TLConstructor = 556825867
	CRC32_gif_getSavedGifs   TLConstructor = 926787430
	CRC32_gif_deleteSavedGif TLConstructor = 523645139
)

var TLConstructor_name = map[int32]string{
	0:         "CRC32_UNKNOWN",
	556825867: "CRC32_gif_saveGif",
	926787430: "CRC32_gif_getSavedGifs",
	523645139: "CRC32_gif_deleteSavedGif",
}

var TLConstructor_value = map[string]int32{
	"CRC32_UNKNOWN":            0,
	"CRC32_gif_saveGif":        556825867,
	"CRC32_gif_getSavedGifs":   926787430,
	"CRC32_gif_deleteSavedGif": 523645139,
}

func (x TLConstructor) String() string {
	return proto.EnumName(TLConstructor_name, int32(x))
}

func (TLConstructor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cabd3b42c591ce02, []int{0}
}

//--------------------------------------------------------------------------------------------
// gif.saveGif user_id:long gif_id:long = Bool;
type TLGifSaveGif struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=gif.TLConstructor" json:"constructor,omitempty"`
	UserId               int64         `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GifId                int64         `protobuf:"varint,4,opt,name=gif_id,json=gifId,proto3" json:"gif_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLGifSaveGif) Reset()         { *m = TLGifSaveGif{} }
func (m *TLGifSaveGif) String() string { return proto.CompactTextString(m) }
func (*TLGifSaveGif) ProtoMessage()    {}
func (*TLGifSaveGif) Descriptor() ([]byte, []int) {
	return fileDescriptor_cabd3b42c591ce02, []int{0}
}
func (m *TLGifSaveGif) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLGifSaveGif) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLGifSaveGif.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLGifSaveGif) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLGifSaveGif.Merge(m, src)
}
func (m *TLGifSaveGif) XXX_Size() int {
	return m.Size()
}
func (m *TLGifSaveGif) XXX_DiscardUnknown() {
	xxx_messageInfo_TLGifSaveGif.DiscardUnknown(m)
}

var xxx_messageInfo_TLGifSaveGif proto.InternalMessageInfo

func (m *TLGifSaveGif) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLGifSaveGif) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *TLGifSaveGif) GetGifId() int64 {
	if m != nil {
		return m.GifId
	}
	return 0
}

//--------------------------------------------------------------------------------------------
// gif.getSavedGifs user_id:long = Vector<long>;
type TLGifGetSavedGifs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=gif.TLConstructor" json:"constructor,omitempty"`
	UserId               int64         `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLGifGetSavedGifs) Reset()         { *m = TLGifGetSavedGifs{} }
func (m *TLGifGetSavedGifs) String() string { return proto.CompactTextString(m) }
func (*TLGifGetSavedGifs) ProtoMessage()    {}
func (*TLGifGetSavedGifs) Descriptor() ([]byte, []int) {
	return fileDescriptor_cabd3b42c591ce02, []int{1}
}
func (m *TLGifGetSavedGifs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLGifGetSavedGifs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLGifGetSavedGifs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLGifGetSavedGifs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLGifGetSavedGifs.Merge(m, src)
}
func (m *TLGifGetSavedGifs) XXX_Size() int {
	return m.Size()
}
func (m *TLGifGetSavedGifs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLGifGetSavedGifs.DiscardUnknown(m)
}

var xxx_messageInfo_TLGifGetSavedGifs proto.InternalMessageInfo

func (m *TLGifGetSavedGifs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLGifGetSavedGifs) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

//--------------------------------------------------------------------------------------------
// gif.deleteSavedGif user_id:long gif_id:long = Bool;
type TLGifDeleteSavedGif struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=gif.TLConstructor" json:"constructor,omitempty"`
	UserId               int64         `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GifId                int64         `protobuf:"varint,4,opt,name=gif_id,json=gifId,proto3" json:"gif_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLGifDeleteSavedGif) Reset()         { *m = TLGifDeleteSavedGif{} }
func (m *TLGifDeleteSavedGif) String() string { return proto.CompactTextString(m) }
func (*TLGifDeleteSavedGif) ProtoMessage()    {}
func (*TLGifDeleteSavedGif) Descriptor() ([]byte, []int) {
	return fileDescriptor_cabd3b42c591ce02, []int{2}
}
func (m *TLGifDeleteSavedGif) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLGifDeleteSavedGif) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLGifDeleteSavedGif.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLGifDeleteSavedGif) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLGifDeleteSavedGif.Merge(m, src)
}
func (m *TLGifDeleteSavedGif) XXX_Size() int {
	return m.Size()
}
func (m *TLGifDeleteSavedGif) XXX_DiscardUnknown() {
	xxx_messageInfo_TLGifDeleteSavedGif.DiscardUnknown(m)
}

var xxx_messageInfo_TLGifDeleteSavedGif proto.InternalMessageInfo

func (m *TLGifDeleteSavedGif) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLGifDeleteSavedGif) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *TLGifDeleteSavedGif) GetGifId() int64 {
	if m != nil {
		return m.GifId
	}
	return 0
}

//--------------------------------------------------------------------------------------------
// Vector api result type
type Vector_Long struct {
	Datas                []int64  `protobuf:"varint,1,rep,packed,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vector_Long) Reset()         { *m = Vector_Long{} }
func (m *Vector_Long) String() string { return proto.CompactTextString(m) }
func (*Vector_Long) ProtoMessage()    {}
func (*Vector_Long) Descriptor() ([]byte, []int) {
	return fileDescriptor_cabd3b42c591ce02, []int{3}
}
func (m *Vector_Long) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_Long) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_Long.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_Long) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_Long.Merge(m, src)
}
func (m *Vector_Long) XXX_Size() int {
	return m.Size()
}
func (m *Vector_Long) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_Long.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_Long proto.InternalMessageInfo

func (m *Vector_Long) GetDatas() []int64 {
	if m != nil {
		return m.Datas
	}
	return nil
}

func init() {
	proto.RegisterEnum("gif.TLConstructor", TLConstructor_name, TLConstructor_value)
	proto.RegisterType((*TLGifSaveGif)(nil), "gif.TL_gif_saveGif")
	proto.RegisterType((*TLGifGetSavedGifs)(nil), "gif.TL_gif_getSavedGifs")
	proto.RegisterType((*TLGifDeleteSavedGif)(nil), "gif.TL_gif_deleteSavedGif")
	proto.RegisterType((*Vector_Long)(nil), "gif.Vector_Long")
}

func init() { proto.RegisterFile("gif.tl.proto", fileDescriptor_cabd3b42c591ce02) }

var fileDescriptor_cabd3b42c591ce02 = []byte{
	// 497 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x92, 0x31, 0x6f, 0xd3, 0x40,
	0x14, 0xc7, 0x73, 0xb8, 0x0d, 0xd2, 0x2b, 0xa9, 0xdc, 0x6b, 0x0b, 0xae, 0x07, 0x2b, 0x32, 0x4b,
	0x85, 0x54, 0x5b, 0x4a, 0xd8, 0x58, 0xa0, 0x19, 0xaa, 0x8a, 0x10, 0x50, 0x28, 0x20, 0xb1, 0x58,
	0x17, 0xfb, 0x7c, 0x3d, 0x29, 0xce, 0x59, 0x77, 0x97, 0xa0, 0x22, 0x31, 0x22, 0x81, 0xf8, 0x18,
	0x7c, 0x0a, 0x46, 0x98, 0x98, 0x10, 0x12, 0x0b, 0x23, 0xcd, 0xc0, 0xcc, 0x84, 0x04, 0x13, 0xb2,
	0xe3, 0xc8, 0x17, 0x95, 0x11, 0x31, 0x58, 0x7a, 0xef, 0x7e, 0xef, 0xbd, 0xbf, 0xef, 0xff, 0x0e,
	0xae, 0x30, 0x9e, 0x06, 0x7a, 0x1c, 0xe4, 0x52, 0x68, 0x81, 0x2d, 0xc6, 0x53, 0xf7, 0x80, 0x71,
	0x7d, 0x3a, 0x1d, 0x05, 0xb1, 0xc8, 0x42, 0x26, 0x98, 0x08, 0x4b, 0x36, 0x9a, 0xa6, 0x65, 0x56,
	0x26, 0x65, 0xb4, 0xe8, 0x71, 0x3d, 0x26, 0x04, 0x1b, 0xd3, 0xba, 0xea, 0x99, 0x24, 0x79, 0x4e,
	0xa5, 0xaa, 0xb8, 0xab, 0xe2, 0x53, 0x9a, 0x91, 0x42, 0x24, 0x16, 0x92, 0x46, 0xfa, 0x2c, 0xa7,
	0x4b, 0xb6, 0x57, 0x33, 0x2d, 0xc9, 0x44, 0xe5, 0x42, 0xea, 0x0a, 0xed, 0xd4, 0x48, 0x9d, 0x4d,
	0xe2, 0xc5, 0xa9, 0x3f, 0x83, 0xcd, 0x93, 0x7e, 0xc4, 0x78, 0x1a, 0x29, 0x32, 0xa3, 0x47, 0x3c,
	0xc5, 0x37, 0x61, 0x23, 0x16, 0x13, 0xa5, 0xe5, 0x34, 0xd6, 0x42, 0x3a, 0xa8, 0x8d, 0xf6, 0x37,
	0x3b, 0x38, 0x28, 0xae, 0x75, 0xd2, 0xef, 0xd5, 0x64, 0x68, 0x96, 0xe1, 0x6b, 0x70, 0x79, 0xaa,
	0xa8, 0x8c, 0x78, 0xe2, 0x58, 0x6d, 0xb4, 0x6f, 0x0d, 0x9b, 0x45, 0x7a, 0x9c, 0xe0, 0x5d, 0x68,
	0x16, 0xd3, 0x79, 0xe2, 0xac, 0x95, 0xe7, 0xeb, 0x8c, 0xa7, 0xc7, 0x89, 0x9f, 0xc0, 0x76, 0xa5,
	0xcb, 0xa8, 0x7e, 0x48, 0x66, 0x34, 0x39, 0xe2, 0xa9, 0xfa, 0xc7, 0xe2, 0xfe, 0x0b, 0xd8, 0xad,
	0x54, 0x12, 0x3a, 0xa6, 0x9a, 0x2e, 0x85, 0xfe, 0xd3, 0x25, 0xaf, 0xc3, 0xc6, 0x63, 0x5a, 0x74,
	0x46, 0x7d, 0x31, 0x61, 0x78, 0x07, 0xd6, 0x13, 0xa2, 0x89, 0x72, 0x50, 0xdb, 0x2a, 0x8a, 0xca,
	0xe4, 0xc6, 0x4b, 0x04, 0xad, 0x15, 0x4d, 0xbc, 0x05, 0xad, 0xde, 0xb0, 0xd7, 0xed, 0x44, 0x8f,
	0x06, 0x77, 0x07, 0xf7, 0x9f, 0x0c, 0xec, 0x06, 0xde, 0x83, 0xad, 0xc5, 0x91, 0xb1, 0x29, 0xfb,
	0xcd, 0xef, 0xf7, 0xaf, 0x2f, 0x61, 0x0f, 0xae, 0xd6, 0xc8, 0x34, 0xd3, 0xfe, 0xfe, 0xe9, 0xe7,
	0x3b, 0x0b, 0xb7, 0xc1, 0xa9, 0xf9, 0xaa, 0x0d, 0xf6, 0x97, 0xf3, 0xaf, 0xbf, 0x90, 0xbb, 0xf6,
	0xea, 0xad, 0xd7, 0xe8, 0x7c, 0x40, 0xd0, 0x1c, 0x3e, 0xe8, 0x15, 0xee, 0x74, 0x61, 0xc3, 0x7c,
	0x11, 0xdb, 0x95, 0x2f, 0xa6, 0xb8, 0xdb, 0x0a, 0x32, 0x5d, 0x3e, 0xa1, 0xe0, 0x50, 0x88, 0xb1,
	0xdf, 0xc0, 0xb7, 0xc1, 0xbe, 0xb0, 0x4e, 0xc7, 0xec, 0x34, 0x89, 0x6b, 0x97, 0xc4, 0x70, 0xc7,
	0x6f, 0xe0, 0x3b, 0x80, 0xff, 0xb2, 0x2a, 0xd7, 0x9c, 0xb1, 0xca, 0x2e, 0xfc, 0xc4, 0xe1, 0xbd,
	0x1f, 0xe7, 0x1e, 0xfa, 0x38, 0xf7, 0xd0, 0xe7, 0xb9, 0x87, 0xbe, 0xcd, 0x3d, 0xf4, 0xf4, 0x96,
	0xa6, 0x24, 0x63, 0x92, 0x64, 0x01, 0x17, 0xe1, 0x32, 0x3e, 0x50, 0x54, 0xce, 0xa8, 0x0c, 0x49,
	0x9e, 0x87, 0x45, 0xc8, 0x63, 0x1a, 0x8e, 0xf8, 0xf3, 0x68, 0x19, 0x33, 0x9e, 0x16, 0xdf, 0xa8,
	0x59, 0x0e, 0xef, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x75, 0x4a, 0x37, 0xfb, 0xd5, 0x03, 0x00,
	0x00,
}

func (this *TLGifSaveGif) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&gif.TLGifSaveGif{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	s = append(s, "GifId: "+fmt.Sprintf("%#v", this.GifId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLGifGetSavedGifs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&gif.TLGifGetSavedGifs{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLGifDeleteSavedGif) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&gif.TLGifDeleteSavedGif{")
	s = append(s, "Constructor: "+fmt.Sprintf("%#v", this.Constructor)+",\n")
	s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	s = append(s, "GifId: "+fmt.Sprintf("%#v", this.GifId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_Long) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&gif.Vector_Long{")
	s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringGifTl(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCGifClient is the client API for RPCGif service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCGifClient interface {
	// gif.saveGif user_id:long gif_id:long = Bool;
	GifSaveGif(ctx context.Context, in *TLGifSaveGif, opts ...grpc.CallOption) (*mtproto.Bool, error)
	// gif.getSavedGifs user_id:long = Vector<long>;
	GifGetSavedGifs(ctx context.Context, in *TLGifGetSavedGifs, opts ...grpc.CallOption) (*Vector_Long, error)
	// gif.deleteSavedGif user_id:long gif_id:long = Bool;
	GifDeleteSavedGif(ctx context.Context, in *TLGifDeleteSavedGif, opts ...grpc.CallOption) (*mtproto.Bool, error)
}

type rPCGifClient struct {
	cc *grpc.ClientConn
}

func NewRPCGifClient(cc *grpc.ClientConn) RPCGifClient {
	return &rPCGifClient{cc}
}

func (c *rPCGifClient) GifSaveGif(ctx context.Context, in *TLGifSaveGif, opts ...grpc.CallOption) (*mtproto.Bool, error) {
	out := new(mtproto.Bool)
	err := c.cc.Invoke(ctx, "/gif.RPCGif/gif_saveGif", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGifClient) GifGetSavedGifs(ctx context.Context, in *TLGifGetSavedGifs, opts ...grpc.CallOption) (*Vector_Long, error) {
	out := new(Vector_Long)
	err := c.cc.Invoke(ctx, "/gif.RPCGif/gif_getSavedGifs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGifClient) GifDeleteSavedGif(ctx context.Context, in *TLGifDeleteSavedGif, opts ...grpc.CallOption) (*mtproto.Bool, error) {
	out := new(mtproto.Bool)
	err := c.cc.Invoke(ctx, "/gif.RPCGif/gif_deleteSavedGif", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCGifServer is the server API for RPCGif service.
type RPCGifServer interface {
	// gif.saveGif user_id:long gif_id:long = Bool;
	GifSaveGif(context.Context, *TLGifSaveGif) (*mtproto.Bool, error)
	// gif.getSavedGifs user_id:long = Vector<long>;
	GifGetSavedGifs(context.Context, *TLGifGetSavedGifs) (*Vector_Long, error)
	// gif.deleteSavedGif user_id:long gif_id:long = Bool;
	GifDeleteSavedGif(context.Context, *TLGifDeleteSavedGif) (*mtproto.Bool, error)
}

// UnimplementedRPCGifServer can be embedded to have forward compatible implementations.
type UnimplementedRPCGifServer struct {
}

func (*UnimplementedRPCGifServer) GifSaveGif(ctx context.Context, req *TLGifSaveGif) (*mtproto.Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GifSaveGif not implemented")
}
func (*UnimplementedRPCGifServer) GifGetSavedGifs(ctx context.Context, req *TLGifGetSavedGifs) (*Vector_Long, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GifGetSavedGifs not implemented")
}
func (*UnimplementedRPCGifServer) GifDeleteSavedGif(ctx context.Context, req *TLGifDeleteSavedGif) (*mtproto.Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GifDeleteSavedGif not implemented")
}

func RegisterRPCGifServer(s *grpc.Server, srv RPCGifServer) {
	s.RegisterService(&_RPCGif_serviceDesc, srv)
}

func _RPCGif_GifSaveGif_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLGifSaveGif)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGifServer).GifSaveGif(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gif.RPCGif/GifSaveGif",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGifServer).GifSaveGif(ctx, req.(*TLGifSaveGif))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGif_GifGetSavedGifs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLGifGetSavedGifs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGifServer).GifGetSavedGifs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gif.RPCGif/GifGetSavedGifs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGifServer).GifGetSavedGifs(ctx, req.(*TLGifGetSavedGifs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGif_GifDeleteSavedGif_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLGifDeleteSavedGif)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGifServer).GifDeleteSavedGif(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gif.RPCGif/GifDeleteSavedGif",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGifServer).GifDeleteSavedGif(ctx, req.(*TLGifDeleteSavedGif))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCGif_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gif.RPCGif",
	HandlerType: (*RPCGifServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "gif_saveGif",
			Handler:    _RPCGif_GifSaveGif_Handler,
		},
		{
			MethodName: "gif_getSavedGifs",
			Handler:    _RPCGif_GifGetSavedGifs_Handler,
		},
		{
			MethodName: "gif_deleteSavedGif",
			Handler:    _RPCGif_GifDeleteSavedGif_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gif.tl.proto",
}

func (m *TLGifSaveGif) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLGifSaveGif) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLGifSaveGif) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.GifId != 0 {
		i = encodeVarintGifTl(dAtA, i, uint64(m.GifId))
		i--
		dAtA[i] = 0x20
	}
	if m.UserId != 0 {
		i = encodeVarintGifTl(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintGifTl(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLGifGetSavedGifs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLGifGetSavedGifs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLGifGetSavedGifs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintGifTl(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintGifTl(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLGifDeleteSavedGif) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLGifDeleteSavedGif) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLGifDeleteSavedGif) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.GifId != 0 {
		i = encodeVarintGifTl(dAtA, i, uint64(m.GifId))
		i--
		dAtA[i] = 0x20
	}
	if m.UserId != 0 {
		i = encodeVarintGifTl(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintGifTl(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Vector_Long) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_Long) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_Long) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		dAtA2 := make([]byte, len(m.Datas)*10)
		var j1 int
		for _, num1 := range m.Datas {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintGifTl(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintGifTl(dAtA []byte, offset int, v uint64) int {
	offset -= sovGifTl(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TLGifSaveGif) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovGifTl(uint64(m.Constructor))
	}
	if m.UserId != 0 {
		n += 1 + sovGifTl(uint64(m.UserId))
	}
	if m.GifId != 0 {
		n += 1 + sovGifTl(uint64(m.GifId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLGifGetSavedGifs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovGifTl(uint64(m.Constructor))
	}
	if m.UserId != 0 {
		n += 1 + sovGifTl(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLGifDeleteSavedGif) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovGifTl(uint64(m.Constructor))
	}
	if m.UserId != 0 {
		n += 1 + sovGifTl(uint64(m.UserId))
	}
	if m.GifId != 0 {
		n += 1 + sovGifTl(uint64(m.GifId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_Long) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		l = 0
		for _, e := range m.Datas {
			l += sovGifTl(uint64(e))
		}
		n += 1 + sovGifTl(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovGifTl(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGifTl(x uint64) (n int) {
	return sovGifTl(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TLGifSaveGif) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGifTl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_gif_saveGif: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_gif_saveGif: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGifTl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGifTl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GifId", wireType)
			}
			m.GifId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGifTl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GifId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGifTl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGifTl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLGifGetSavedGifs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGifTl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_gif_getSavedGifs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_gif_getSavedGifs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGifTl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGifTl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGifTl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGifTl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLGifDeleteSavedGif) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGifTl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_gif_deleteSavedGif: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_gif_deleteSavedGif: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGifTl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGifTl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GifId", wireType)
			}
			m.GifId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGifTl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GifId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGifTl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGifTl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_Long) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGifTl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_Long: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_Long: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGifTl
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Datas = append(m.Datas, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGifTl
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthGifTl
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthGifTl
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Datas) == 0 {
					m.Datas = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGifTl
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Datas = append(m.Datas, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGifTl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGifTl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGifTl(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGifTl
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGifTl
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGifTl
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGifTl
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGifTl
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGifTl
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGifTl        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGifTl          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGifTl = fmt.Errorf("proto: unexpected end of group")
)
